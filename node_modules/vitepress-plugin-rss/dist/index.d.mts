import { FeedOptions, Author } from 'feed';
import { MarkdownEnv, SiteConfig } from 'vitepress';

type RSSOptions = Omit<FeedOptions, 'id'> & {
    id?: string;
    /**
     * 过滤目标文章
     * @param post 文章相关信息
     */
    filter?: (value: PostInfo, index: number, array: PostInfo[]) => boolean;
    /**
     * 你的站点地址
     * @example 'https://sugarat.top'
     */
    baseUrl: string;
    /**
     * 线上访问的RSS地址
     * @default
     * ```ts
     * `${baseUrl + VPConfig.site.base + (filename || 'feed.rss'}`
     * ```
     */
    url?: string;
    /**
     * 输出的RSS文件名
     * @default 'feed.rss'
     */
    filename?: string;
    /**
     * RSS的图标展示（你也可以传入一个svg字符串进行自定义，SVG 图标可访问 https://www.xicons.org/# 获取）
     * @default true
     */
    icon?: boolean | string;
    /**
     * 是否打印过程提示
     * @default true
     */
    log?: boolean;
    /**
     * 是否过滤 layout:home
     * @default true
     */
    ignoreHome?: boolean;
    /**
     * 是否忽略 frontmatter publish 控制
     * @default false
     */
    ignorePublish?: boolean;
    /**
     * 博客站点内容涉及的作者列表
     */
    authors?: Author[];
    /**
     * 自定义文章摘要生成逻辑
     */
    renderExpect?: (fileContent: string, frontmatter: Record<string, any>) => string | Promise<string>;
    /**
     * 限制输出文件包含的文章数量
     * @default 0
     * @description (0 不限制；> 1 会按照日期排序对输出内容进行调整)
     */
    limit?: number;
    ariaLabel?: string;
    /**
     * 手动控制生成 HTML的逻辑，或不是用 vitepress 内置的 HTML 渲染逻辑
     * @default true
     */
    renderHTML?: ((filecontent: string) => string | Promise<string>) | boolean;
    locales?: Record<string, Omit<RSSOptions, 'locales'>>;
    /**
     * (可选)文章解析完成后调用，可对文章内容进行进一步处理
     */
    transform?: (content: string) => string;
};
interface PostInfo {
    filepath: string;
    fileContent: string;
    html?: string;
    description: string;
    date: string;
    title: string;
    url: string;
    frontmatter: {
        [key: string]: any;
    };
    env: MarkdownEnv;
}

declare function genFeed(config: SiteConfig, rssOptions: RSSOptions): Promise<void>;

declare const svgIcon = "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 448 512\"><title>RSS</title><path d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48s48 21.49 48 48s-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634c-5.214-80.05-69.243-143.92-149.123-149.123c-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425c110.546 5.974 198.997 94.536 204.964 204.964c.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038c-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432c167.83 6.025 302.21 141.191 308.205 308.205c.232 6.449-4.978 11.787-11.432 11.787z\" fill=\"currentColor\"></path></svg>";
declare function RssPlugin(rssOptions: RSSOptions): any;

export { PostInfo, RSSOptions, RssPlugin, genFeed, svgIcon };

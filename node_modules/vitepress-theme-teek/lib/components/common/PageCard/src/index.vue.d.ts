import { PageCardProps } from './pageCard';
import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
type __VLS_Props = PageCardProps;
type __VLS_PublicProps = {
    modelValue?: number;
} & __VLS_Props;
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        title?(_: {}): any;
        page?(_: {
            pagination: (to: number, type: "prev" | "next") => void;
        }): any;
        'page-left'?(_: {
            pagination: (to: number, type: "prev" | "next") => void;
        }): any;
        'page-right'?(_: {
            pagination: (to: number, type: "prev" | "next") => void;
        }): any;
        default?(_: {
            transitionName: string;
            startAutoPage: () => void;
            closeAutoPage: () => void;
        }): any;
    };
    refs: {};
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: DefineComponent<__VLS_PublicProps, {}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    pagination: (to: number, args_1: "prev" | "next") => any;
    "update:modelValue": (value: number) => any;
}, string, PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    onPagination?: ((to: number, args_1: "prev" | "next") => any) | undefined;
    "onUpdate:modelValue"?: ((value: number) => any) | undefined;
}>, {}, {}, {}, {}, string, ComponentProvideOptions, false, {}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

import { PaginationProps, Size } from './pagination';
import { DefineComponent, ComponentOptionsMixin, PublicProps, Component, ComponentProvideOptions } from 'vue';
import { IconifyIcon } from '@iconify/vue';
type __VLS_Props = PaginationProps;
type __VLS_PublicProps = {
    "currentPage"?: number;
    "pageSize"?: number;
} & __VLS_Props;
declare const _default: DefineComponent<__VLS_PublicProps, {}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    change: (currentPage: number, pageSize: number) => any;
    "size-change": (value: number) => any;
    "current-change": (value: number) => any;
    "prev-click": (value: number) => any;
    "next-click": (value: number) => any;
    "update:currentPage": (value: number) => any;
    "update:pageSize": (value: number) => any;
}, string, PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    onChange?: ((currentPage: number, pageSize: number) => any) | undefined;
    "onSize-change"?: ((value: number) => any) | undefined;
    "onCurrent-change"?: ((value: number) => any) | undefined;
    "onPrev-click"?: ((value: number) => any) | undefined;
    "onNext-click"?: ((value: number) => any) | undefined;
    "onUpdate:currentPage"?: ((value: number) => any) | undefined;
    "onUpdate:pageSize"?: ((value: number) => any) | undefined;
}>, {
    size: Size;
    disabled: boolean;
    prevIcon: string | Object | Component | IconifyIcon;
    nextIcon: string | Object | Component | IconifyIcon;
    pagerCount: number;
    layout: string;
    background: boolean;
    hideOnSinglePage: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, false, {}, HTMLDivElement>;
export default _default;

import { ImageViewerProps, ImageViewerAction } from './imageViewer';
import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        progress?(_: {
            activeIndex: number;
            total: number;
        }): any;
        toolbar?(_: {
            actions: (action: ImageViewerAction, options?: {}) => void;
            prev: () => void;
            next: () => void;
            reset: () => void;
            activeIndex: number;
            setActiveItem: (index: number) => void;
        }): any;
        default?(_: {}): any;
    };
    refs: {
        wrapper: HTMLDivElement;
    };
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: DefineComponent<ImageViewerProps, {
    /**
     * 手动切换图片
     */
    setActiveItem: (index: number) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    switch: (index: number) => any;
    close: () => any;
    rotate: (deg: number) => any;
}, string, PublicProps, Readonly<ImageViewerProps> & Readonly<{
    onSwitch?: ((index: number) => any) | undefined;
    onClose?: (() => any) | undefined;
    onRotate?: ((deg: number) => any) | undefined;
}>, {
    urlList: string[];
    initialIndex: number;
    infinite: boolean;
    hideOnClickModal: boolean;
    closeOnPressEscape: boolean;
    zoomRate: number;
    minScale: number;
    maxScale: number;
    showProgress: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, false, {
    wrapper: HTMLDivElement;
}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

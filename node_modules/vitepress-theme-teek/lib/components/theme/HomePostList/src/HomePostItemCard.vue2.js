'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var top = require('../../../../static/icons/top.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');
var index_vue_vue_type_script_setup_true_name_ArticleInfo_lang = require('../../ArticleInfo/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_ArticleTitle_lang = require('../../ArticleTitle/src/index.vue2.js');

const _hoisted_1 = ["href", "alt"];
const _hoisted_2 = ["src"];
const _hoisted_3 = ["href", "aria-label"];
const _hoisted_4 = ["innerHTML", "aria-label"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "HomePostItemCard" },
  __name: "HomePostItemCard",
  props: {
    post: {}
  },
  setup(__props) {
    const ns = useNamespace.useNamespace("post-item-card");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const postConfig = getTeekConfigRef("post", {
      showCapture: false,
      splitSeparator: false,
      cardStyleTitleTagPosition: "left",
      defaultCoverImg: []
    });
    const articleConfig = getTeekConfigRef("articleAnalyze", { showInfo: true });
    const postUrl = __props.post.url && vitepress.withBase(__props.post.url);
    const imgSrcList = Vue.computed(() => [__props.post.frontmatter.coverImg || postConfig.value.defaultCoverImg || []].flat());
    const excerpt = Vue.computed(
      () => __props.post.frontmatter.description || __props.post.excerpt || postConfig.value.showCapture && __props.post.capture
    );
    const isShowInfo = Vue.computed(() => {
      const arr = [articleConfig.value.showInfo].flat();
      return arr.includes(true) || arr.includes("post");
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass(Vue.unref(ns).b())
        },
        [
          !!__props.post.frontmatter.sticky ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
            key: 0,
            icon: Vue.unref(top.default),
            class: "top",
            size: 40,
            title: Vue.unref(t)("tk.homePost.pin", { sticky: __props.post.frontmatter.sticky }),
            "aria-label": Vue.unref(t)("tk.homePost.pinLabel")
          }, null, 8, ["icon", "title", "aria-label"])) : Vue.createCommentVNode("v-if", true),
          imgSrcList.value.length ? (Vue.openBlock(), Vue.createElementBlock(
            "div",
            {
              key: 1,
              class: Vue.normalizeClass(Vue.unref(ns).e("cover-img"))
            },
            [
              Vue.createElementVNode("a", {
                href: Vue.unref(postUrl),
                alt: __props.post.title
              }, [
                Vue.createElementVNode("img", {
                  src: Vue.unref(vitepress.withBase)(imgSrcList.value[0]),
                  class: "cover-img"
                }, null, 8, _hoisted_2)
              ], 8, _hoisted_1)
            ],
            2
            /* CLASS */
          )) : Vue.createCommentVNode("v-if", true),
          Vue.createElementVNode(
            "div",
            {
              class: Vue.normalizeClass([Vue.unref(ns).e("info")])
            },
            [
              Vue.createElementVNode("a", {
                class: "title hover-color, sle",
                href: Vue.unref(postUrl),
                "aria-label": __props.post.title
              }, [
                Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_ArticleTitle_lang.default), {
                  post: __props.post,
                  "title-tag-props": { position: Vue.unref(postConfig).cardStyleTitleTagPosition }
                }, null, 8, ["post", "title-tag-props"])
              ], 8, _hoisted_3),
              excerpt.value ? (Vue.openBlock(), Vue.createElementBlock("span", {
                key: 0,
                class: "excerpt mle",
                innerHTML: excerpt.value,
                "aria-label": Vue.unref(t)("tk.homePost.excerptLabel")
              }, null, 8, _hoisted_4)) : Vue.createCommentVNode("v-if", true),
              isShowInfo.value ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_ArticleInfo_lang.default), {
                key: 1,
                post: __props.post,
                scope: "post",
                split: Vue.unref(postConfig).splitSeparator,
                "aria-label": Vue.unref(t)("tk.homePost.infoLabel")
              }, null, 8, ["post", "split", "aria-label"])) : Vue.createCommentVNode("v-if", true)
            ],
            2
            /* CLASS */
          )
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;

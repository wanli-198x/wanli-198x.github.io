'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var index$1 = require('../../../../helper/dist/index.js');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var topArticle = require('../../../../static/icons/topArticle.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_PageCard_lang = require('../../../common/PageCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_ArticleTitle_lang = require('../../ArticleTitle/src/index.vue2.js');

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["href"];
const _hoisted_3 = { class: "date" };
const _hoisted_4 = ["aria-label"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "HomeTopArticleCard" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("top-article");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const posts = index.usePosts();
    const topArticleConfig = getTeekConfigRef("topArticle", {
      limit: 4,
      title: t("tk.topArticleCard.title", { icon: topArticle.default }),
      emptyLabel: t("tk.topArticleCard.emptyLabel"),
      autoPage: false,
      pageSpeed: 4e3,
      dateFormat: "yyyy-MM-dd hh:mm:ss"
    });
    const topArticleList = Vue.computed(() => {
      const sortPostsByDateAndSticky = posts.value.sortPostsByDateAndSticky;
      return sortPostsByDateAndSticky.filter((p) => p.frontmatter.top)?.map((p, index) => ({ ...p, num: index + 1 }));
    });
    const pageNum = Vue.ref(1);
    const currentTopArticleList = Vue.computed(() => {
      const { limit } = topArticleConfig.value;
      const p = pageNum.value;
      return topArticleList.value.slice((p - 1) * limit, p * limit);
    });
    const formatPostDate = (date) => {
      const dateFormatConst = topArticleConfig.value.dateFormat;
      if (index$1.isFunction(dateFormatConst)) return dateFormatConst(date || "");
      return index$1.formatDate(date || /* @__PURE__ */ new Date(), dateFormatConst);
    };
    const finalTitle = Vue.computed(() => {
      const { title } = topArticleConfig.value;
      if (index$1.isFunction(title)) return title(topArticle.default);
      return title;
    });
    const tagColor = index.useTagColor();
    const itemRefs = Vue.ref([]);
    const getStyle = (num, index) => {
      return {
        [ns.cssVarName("num-bg-color")]: tagColor.value[num % tagColor.value.length].text,
        top: `calc(${index} * (calc(${ns.cssVar("home-top-article-gap")} + ${itemRefs.value?.[index]?.getBoundingClientRect().height || 0}px)))`
      };
    };
    const router = vitepress.useRouter();
    const handleTitleClick = () => {
      topArticleConfig.value.titleClick?.(router);
    };
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_PageCard_lang.default), {
        page: "",
        modelValue: pageNum.value,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => pageNum.value = $event),
        pageSize: Vue.unref(topArticleConfig).limit,
        total: topArticleList.value.length,
        title: finalTitle.value,
        titleClick: Vue.unref(topArticleConfig).titleClick ? handleTitleClick : void 0,
        autoPage: Vue.unref(topArticleConfig).autoPage,
        pageSpeed: Vue.unref(topArticleConfig).pageSpeed,
        class: Vue.normalizeClass(Vue.unref(ns).b()),
        "aria-label": Vue.unref(t)("tk.topArticleCard.label")
      }, {
        default: Vue.withCtx(({ transitionName }) => [
          topArticleList.value.length ? (Vue.openBlock(), Vue.createBlock(Vue.TransitionGroup, {
            key: 0,
            name: transitionName,
            tag: "ul",
            mode: "out-in",
            class: Vue.normalizeClass(`${Vue.unref(ns).e("list")} flx-column`),
            "aria-label": Vue.unref(t)("tk.topArticleCard.listLabel")
          }, {
            default: Vue.withCtx(() => [
              (Vue.openBlock(true), Vue.createElementBlock(
                Vue.Fragment,
                null,
                Vue.renderList(currentTopArticleList.value, (item, index) => {
                  return Vue.openBlock(), Vue.createElementBlock("li", {
                    ref_for: true,
                    ref_key: "itemRefs",
                    ref: itemRefs,
                    key: item.num,
                    class: Vue.normalizeClass(Vue.unref(ns).e("list__item")),
                    style: Vue.normalizeStyle(getStyle(item.num - 1, index)),
                    "aria-label": item.title
                  }, [
                    Vue.createElementVNode(
                      "span",
                      {
                        class: Vue.normalizeClass(["num", { sticky: item.frontmatter.sticky }])
                      },
                      Vue.toDisplayString(item.num),
                      3
                      /* TEXT, CLASS */
                    ),
                    Vue.createElementVNode(
                      "div",
                      {
                        class: Vue.normalizeClass(Vue.unref(ns).e("list__item__info"))
                      },
                      [
                        Vue.createElementVNode("a", {
                          href: item.url && Vue.unref(vitepress.withBase)(item.url),
                          class: "hover-color flx-align-center"
                        }, [
                          Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_ArticleTitle_lang.default), {
                            post: item,
                            "title-tag-props": { position: "right", size: "mini" }
                          }, null, 8, ["post"])
                        ], 8, _hoisted_2),
                        Vue.createElementVNode(
                          "div",
                          _hoisted_3,
                          Vue.toDisplayString(formatPostDate(item.date)),
                          1
                          /* TEXT */
                        )
                      ],
                      2
                      /* CLASS */
                    )
                  ], 14, _hoisted_1);
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ]),
            _: 1
            /* STABLE */
          }, 8, ["name", "class", "aria-label"])) : (Vue.openBlock(), Vue.createElementBlock("div", {
            key: 1,
            class: Vue.normalizeClass(Vue.unref(ns).m("empty")),
            "aria-label": Vue.unref(topArticleConfig).emptyLabel
          }, Vue.toDisplayString(Vue.unref(topArticleConfig).emptyLabel), 11, _hoisted_4))
        ]),
        _: 1
        /* STABLE */
      }, 8, ["modelValue", "pageSize", "total", "title", "titleClick", "autoPage", "pageSpeed", "class", "aria-label"]);
    };
  }
});

exports.default = _sfc_main;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useWindowTransition = require('../../../../composables/useWindowTransition.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');

const _hoisted_1 = ["src"];
const _hoisted_2 = ["innerHTML"];
const _hoisted_3 = ["innerHTML"];
const _hoisted_4 = {
  key: 0,
  class: "features"
};
const _hoisted_5 = ["innerHTML"];
const _hoisted_6 = ["innerHTML"];
const _hoisted_7 = ["src"];
const _hoisted_8 = ["innerHTML"];
const _hoisted_9 = ["innerHTML"];
const _hoisted_10 = {
  key: 0,
  class: "highlights"
};
const _hoisted_11 = ["innerHTML"];
const _hoisted_12 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("home-features");
    const { getTeekConfigRef } = index.useTeekConfig();
    const featuresConfig = getTeekConfigRef("features", []);
    const windowTransition = index.useWindowTransitionConfig((config) => config.feature);
    const textInstance = Vue.ref(null);
    const { start } = useWindowTransition.useWindowTransition(textInstance, false);
    Vue.onMounted(() => {
      windowTransition.value && start();
    });
    return (_ctx, _cache) => {
      return Vue.unref(featuresConfig)?.length ? (Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          key: 0,
          class: Vue.normalizeClass([Vue.unref(ns).b(), "vp-doc"])
        },
        [
          (Vue.openBlock(true), Vue.createElementBlock(
            Vue.Fragment,
            null,
            Vue.renderList(Vue.unref(featuresConfig), (feature) => {
              return Vue.openBlock(), Vue.createElementBlock(
                Vue.Fragment,
                {
                  key: feature.title
                },
                [
                  feature.features ? (Vue.openBlock(), Vue.createElementBlock(
                    "div",
                    {
                      key: 0,
                      class: Vue.normalizeClass([Vue.unref(ns).e("feature-wrapper"), "features-wrapper"])
                    },
                    [
                      Vue.createElementVNode(
                        "div",
                        {
                          class: Vue.normalizeClass(Vue.unref(ns).e("feature__content"))
                        },
                        [
                          Vue.createElementVNode("img", {
                            src: feature.image,
                            class: "image"
                          }, null, 8, _hoisted_1),
                          Vue.createElementVNode(
                            "div",
                            {
                              class: Vue.normalizeClass([Vue.unref(ns).e("feature__header"), "header"])
                            },
                            [
                              Vue.createElementVNode("h2", {
                                ref_for: true,
                                ref_key: "textInstance",
                                ref: textInstance,
                                innerHTML: feature.title
                              }, null, 8, _hoisted_2),
                              feature.details ? (Vue.openBlock(), Vue.createElementBlock("p", {
                                key: 0,
                                ref_for: true,
                                ref_key: "textInstance",
                                ref: textInstance,
                                innerHTML: feature.details
                              }, null, 8, _hoisted_3)) : Vue.createCommentVNode("v-if", true)
                            ],
                            2
                            /* CLASS */
                          ),
                          feature.features?.length ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_4, [
                            (Vue.openBlock(true), Vue.createElementBlock(
                              Vue.Fragment,
                              null,
                              Vue.renderList(feature.features, (item) => {
                                return Vue.openBlock(), Vue.createBlock(Vue.resolveDynamicComponent(item.link ? "a" : "div"), {
                                  key: item.title,
                                  href: Vue.unref(vitepress.withBase)(item.link ?? ""),
                                  class: "features__item item"
                                }, {
                                  default: Vue.withCtx(() => [
                                    Vue.createElementVNode(
                                      "h3",
                                      {
                                        ref_for: true,
                                        ref_key: "textInstance",
                                        ref: textInstance,
                                        class: "flx-align-center"
                                      },
                                      [
                                        item.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                                          key: 0,
                                          icon: item.icon,
                                          class: "feature-icon"
                                        }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true),
                                        Vue.createElementVNode("span", {
                                          innerHTML: item.title
                                        }, null, 8, _hoisted_5)
                                      ],
                                      512
                                      /* NEED_PATCH */
                                    ),
                                    item.details ? (Vue.openBlock(), Vue.createElementBlock("p", {
                                      key: 0,
                                      ref_for: true,
                                      ref_key: "textInstance",
                                      ref: textInstance,
                                      innerHTML: item.details
                                    }, null, 8, _hoisted_6)) : Vue.createCommentVNode("v-if", true)
                                  ]),
                                  _: 2
                                  /* DYNAMIC */
                                }, 1032, ["href"]);
                              }),
                              128
                              /* KEYED_FRAGMENT */
                            ))
                          ])) : Vue.createCommentVNode("v-if", true)
                        ],
                        2
                        /* CLASS */
                      )
                    ],
                    2
                    /* CLASS */
                  )) : feature.highlights ? (Vue.openBlock(), Vue.createElementBlock(
                    "div",
                    {
                      key: 1,
                      class: Vue.normalizeClass([Vue.unref(ns).e("highlight-wrapper"), "features-wrapper"])
                    },
                    [
                      Vue.createElementVNode(
                        "div",
                        {
                          class: Vue.normalizeClass(Vue.unref(ns).e("highlight"))
                        },
                        [
                          Vue.createElementVNode("img", {
                            src: feature.image,
                            class: "image"
                          }, null, 8, _hoisted_7),
                          Vue.createElementVNode(
                            "div",
                            {
                              class: Vue.normalizeClass(Vue.unref(ns).e("highlight__content"))
                            },
                            [
                              Vue.createElementVNode(
                                "div",
                                {
                                  class: Vue.normalizeClass([Vue.unref(ns).e("highlight__header"), "header"])
                                },
                                [
                                  Vue.createElementVNode("h2", {
                                    ref_for: true,
                                    ref_key: "textInstance",
                                    ref: textInstance,
                                    innerHTML: feature.title
                                  }, null, 8, _hoisted_8),
                                  feature.details ? (Vue.openBlock(), Vue.createElementBlock("p", {
                                    key: 0,
                                    ref_for: true,
                                    ref_key: "textInstance",
                                    ref: textInstance,
                                    innerHTML: feature.details
                                  }, null, 8, _hoisted_9)) : Vue.createCommentVNode("v-if", true)
                                ],
                                2
                                /* CLASS */
                              ),
                              feature.highlights?.length ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_10, [
                                (Vue.openBlock(true), Vue.createElementBlock(
                                  Vue.Fragment,
                                  null,
                                  Vue.renderList(feature.highlights, (item) => {
                                    return Vue.openBlock(), Vue.createBlock(Vue.resolveDynamicComponent(item.link ? "a" : "div"), {
                                      key: item.title,
                                      href: Vue.unref(vitepress.withBase)(item.link ?? ""),
                                      class: Vue.normalizeClass([{ "no-details": !item.details }, "highlights__item item"])
                                    }, {
                                      default: Vue.withCtx(() => [
                                        Vue.createElementVNode(
                                          "h3",
                                          {
                                            ref_for: true,
                                            ref_key: "textInstance",
                                            ref: textInstance
                                          },
                                          [
                                            item.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                                              key: 0,
                                              icon: item.icon,
                                              class: "feature-icon"
                                            }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true),
                                            Vue.createElementVNode("span", {
                                              innerHTML: item.title
                                            }, null, 8, _hoisted_11)
                                          ],
                                          512
                                          /* NEED_PATCH */
                                        ),
                                        item.details ? (Vue.openBlock(), Vue.createElementBlock("p", {
                                          key: 0,
                                          ref_for: true,
                                          ref_key: "textInstance",
                                          ref: textInstance,
                                          innerHTML: item.details
                                        }, null, 8, _hoisted_12)) : Vue.createCommentVNode("v-if", true)
                                      ]),
                                      _: 2
                                      /* DYNAMIC */
                                    }, 1032, ["href", "class"]);
                                  }),
                                  128
                                  /* KEYED_FRAGMENT */
                                ))
                              ])) : Vue.createCommentVNode("v-if", true)
                            ],
                            2
                            /* CLASS */
                          )
                        ],
                        2
                        /* CLASS */
                      )
                    ],
                    2
                    /* CLASS */
                  )) : Vue.createCommentVNode("v-if", true)
                ],
                64
                /* STABLE_FRAGMENT */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ],
        2
        /* CLASS */
      )) : Vue.createCommentVNode("v-if", true);
    };
  }
});

exports.default = _sfc_main;

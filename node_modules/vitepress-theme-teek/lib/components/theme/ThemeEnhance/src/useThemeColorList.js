'use strict';

var Vue = require('vue');
var index = require('../../../../helper/dist/index.js');
require('vitepress');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var index$1 = require('../../ConfigProvider/index.js');
var themeEnhance = require('./themeEnhance.js');

const useThemeColorList = () => {
  if (!index.isClient) return;
  const { getTeekConfigRef } = index$1.useTeekConfig();
  const themeEnhanceConfig = getTeekConfigRef("themeEnhance", {});
  const { t } = useLocale.useLocale();
  return Vue.computed(() => {
    const { customize = false, append = [] } = themeEnhanceConfig.value.themeColor || {};
    const useVitepressTheme = index.isBoolean(customize) ? customize === false : customize?.vitepressTheme ?? true;
    const useElementPlusTheme = index.isBoolean(customize) ? customize === false : customize?.elementPlusTheme ?? true;
    const vitePressThemeColorList = useVitepressTheme ? [
      {
        label: t("tk.themeEnhance.themeColor.vpLabel"),
        tip: t("tk.themeEnhance.themeColor.vpTip"),
        options: [
          {
            value: themeEnhance.ThemeColorName.vpDefault,
            label: t("tk.themeEnhance.themeColor.defaultLabel"),
            title: `VitePress ${t("tk.themeEnhance.themeColor.defaultLabel")}`,
            ariaLabel: `VitePress ${t("tk.themeEnhance.themeColor.defaultLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--vp-c-indigo-1")
          },
          {
            value: themeEnhance.ThemeColorName.vpGreen,
            label: t("tk.themeEnhance.themeColor.greenLabel"),
            title: `VitePress ${t("tk.themeEnhance.themeColor.greenLabel")}`,
            ariaLabel: `VitePress ${t("tk.themeEnhance.themeColor.greenLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--vp-c-green-1")
          },
          {
            value: themeEnhance.ThemeColorName.vpYellow,
            label: t("tk.themeEnhance.themeColor.yellowLabel"),
            title: `VitePress ${t("tk.themeEnhance.themeColor.yellowLabel")}`,
            ariaLabel: `VitePress ${t("tk.themeEnhance.themeColor.yellowLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--vp-c-yellow-1")
          },
          {
            value: themeEnhance.ThemeColorName.vpRed,
            label: t("tk.themeEnhance.themeColor.redLabel"),
            title: `VitePress ${t("tk.themeEnhance.themeColor.redLabel")}`,
            ariaLabel: `VitePress ${t("tk.themeEnhance.themeColor.redLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--vp-c-red-1")
          }
        ]
      }
    ] : [];
    const elementPlusThemeColorList = useElementPlusTheme ? [
      {
        label: t("tk.themeEnhance.themeColor.epLabel"),
        tip: t("tk.themeEnhance.themeColor.epTip"),
        options: [
          {
            value: themeEnhance.ThemeColorName.epBlue,
            label: `${t("tk.themeEnhance.themeColor.blueLabel")}`,
            title: `ElementPlus ${t("tk.themeEnhance.themeColor.blueLabel")}`,
            ariaLabel: `ElementPlus ${t("tk.themeEnhance.themeColor.blueLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--tk-el-color-primary")
          },
          {
            value: themeEnhance.ThemeColorName.epGreen,
            label: `${t("tk.themeEnhance.themeColor.greenLabel")}`,
            title: `ElementPlus ${t("tk.themeEnhance.themeColor.greenLabel")}`,
            ariaLabel: `ElementPlus ${t("tk.themeEnhance.themeColor.greenLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--tk-el-color-success")
          },
          {
            value: themeEnhance.ThemeColorName.epYellow,
            label: `${t("tk.themeEnhance.themeColor.yellowLabel")}`,
            title: `ElementPlus ${t("tk.themeEnhance.themeColor.yellowLabel")}`,
            ariaLabel: `ElementPlus ${t("tk.themeEnhance.themeColor.yellowLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--tk-el-color-warning")
          },
          {
            value: themeEnhance.ThemeColorName.epRed,
            label: `${t("tk.themeEnhance.themeColor.redLabel")}`,
            title: `ElementPlus ${t("tk.themeEnhance.themeColor.redLabel")}`,
            ariaLabel: `ElementPlus ${t("tk.themeEnhance.themeColor.redLabel")}`,
            color: getComputedStyle(document.documentElement).getPropertyValue("--tk-el-color-danger")
          }
        ]
      }
    ] : [];
    return [...vitePressThemeColorList, ...elementPlusThemeColorList, ...append];
  });
};

exports.useThemeColorList = useThemeColorList;

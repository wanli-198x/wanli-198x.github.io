'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var copyright = require('../../../../static/icons/copyright.js');
var icpRecord = require('../../../../static/icons/icpRecord.js');
var theme = require('../../../../static/icons/theme.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');
var securityRecord = require('../../../../static/img/securityRecord.png.js');

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["aria-label"];
const _hoisted_3 = ["href", "title", "aria-label"];
const _hoisted_4 = { key: 1 };
const _hoisted_5 = ["innerHTML"];
const _hoisted_6 = ["aria-label"];
const _hoisted_7 = ["href", "aria-label"];
const _hoisted_8 = { key: 2 };
const _hoisted_9 = ["innerHTML"];
const _hoisted_10 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "FooterInfo" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("footer-info");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const footerInfo = getTeekConfigRef("footerInfo", {});
    const social = getTeekConfigRef("social", []);
    const footerData = Vue.computed(() => {
      const { theme: theme$1 = {}, copyright: copyright$1 = {}, icpRecord: icpRecord$1, securityRecord: securityRecord$1 } = footerInfo.value || {};
      const data = [];
      if (theme$1.show !== false) {
        data.push({
          name: "Theme By Teek",
          icon: theme.default,
          link: "https://github.com/Kele-Bingtang/vitepress-theme-teek",
          // 可覆盖上面的配置项
          ...theme$1
        });
      }
      const { show = true, createYear = "", suffix = "" } = copyright$1;
      if (show) {
        data.push({
          name: `Copyright ${createYear ? `${createYear}-` : ""}${(/* @__PURE__ */ new Date()).getFullYear()} ${suffix}`,
          icon: copyright.default,
          ...copyright$1
        });
      }
      if (icpRecord$1) data.push({ icon: icpRecord.default, ...icpRecord$1 });
      if (securityRecord$1) {
        data.push({ icon: securityRecord.default, iconType: "img", imgAlt: "Security Record", ...securityRecord$1 });
      }
      return data;
    });
    return (_ctx, _cache) => {
      return Vue.unref(footerInfo) || Vue.unref(social).length ? (Vue.openBlock(), Vue.createElementBlock("div", {
        key: 0,
        class: Vue.normalizeClass([Vue.unref(ns).b(), Vue.unref(ns).join("wallpaper-outside")]),
        role: "contentinfo",
        "aria-label": Vue.unref(t)("tk.footerInfo.label")
      }, [
        Vue.unref(social).length ? (Vue.openBlock(), Vue.createElementBlock("div", {
          key: 0,
          class: Vue.normalizeClass(`${Vue.unref(ns).e("icons")} flx-center`),
          role: "group",
          "aria-label": Vue.unref(t)("tk.footerInfo.socialLabel")
        }, [
          (Vue.openBlock(true), Vue.createElementBlock(
            Vue.Fragment,
            null,
            Vue.renderList(Vue.unref(social), (item, index) => {
              return Vue.openBlock(), Vue.createElementBlock("a", {
                key: index,
                href: item.link && Vue.unref(vitepress.withBase)(item.link),
                title: item.name,
                target: "_blank",
                "aria-label": item.name
              }, [
                item.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                  key: 0,
                  iconType: item.iconType,
                  icon: item.icon,
                  size: "20px",
                  color: "var(--vp-c-text-2)",
                  hover: "",
                  imgAlt: item.imgAlt,
                  "aria-hidden": "true"
                }, null, 8, ["iconType", "icon", "imgAlt"])) : item.name ? (Vue.openBlock(), Vue.createElementBlock(
                  "span",
                  _hoisted_4,
                  Vue.toDisplayString(item.name),
                  1
                  /* TEXT */
                )) : Vue.createCommentVNode("v-if", true)
              ], 8, _hoisted_3);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ], 10, _hoisted_2)) : Vue.createCommentVNode("v-if", true),
        Vue.unref(footerInfo) ? (Vue.openBlock(), Vue.createElementBlock(
          Vue.Fragment,
          { key: 1 },
          [
            (Vue.openBlock(true), Vue.createElementBlock(
              Vue.Fragment,
              null,
              Vue.renderList([Vue.unref(footerInfo).topMessage || []].flat(), (message, index) => {
                return Vue.openBlock(), Vue.createElementBlock("p", {
                  key: index,
                  innerHTML: message,
                  class: "flx-wrap-justify-center"
                }, null, 8, _hoisted_5);
              }),
              128
              /* KEYED_FRAGMENT */
            )),
            Vue.createElementVNode("div", {
              class: Vue.normalizeClass(`${Vue.unref(ns).e("list")} flx-wrap-justify-center`),
              role: "list",
              "aria-label": Vue.unref(t)("tk.footerInfo.infoLabel")
            }, [
              (Vue.openBlock(true), Vue.createElementBlock(
                Vue.Fragment,
                null,
                Vue.renderList(footerData.value, (item) => {
                  return Vue.openBlock(), Vue.createElementBlock(
                    "div",
                    {
                      key: item.name,
                      class: Vue.normalizeClass(`${Vue.unref(ns).e("list__item")} flx-align-center`),
                      role: "listitem"
                    },
                    [
                      item.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                        key: 0,
                        iconType: item.iconType,
                        icon: item.icon,
                        size: "16px",
                        color: "var(--vp-c-text-2)",
                        imgAlt: item.imgAlt,
                        "aria-hidden": "true"
                      }, null, 8, ["iconType", "icon", "imgAlt"])) : Vue.createCommentVNode("v-if", true),
                      item.link ? (Vue.openBlock(), Vue.createElementBlock("a", {
                        key: 1,
                        href: Vue.unref(vitepress.withBase)(item.link),
                        target: "_blank",
                        "aria-label": item.name
                      }, Vue.toDisplayString(item.name), 9, _hoisted_7)) : (Vue.openBlock(), Vue.createElementBlock(
                        "span",
                        _hoisted_8,
                        Vue.toDisplayString(item.name),
                        1
                        /* TEXT */
                      ))
                    ],
                    2
                    /* CLASS */
                  );
                }),
                128
                /* KEYED_FRAGMENT */
              )),
              Vue.unref(footerInfo).customHtml ? (Vue.openBlock(), Vue.createElementBlock("span", {
                key: 0,
                innerHTML: Vue.unref(footerInfo).customHtml
              }, null, 8, _hoisted_9)) : Vue.createCommentVNode("v-if", true)
            ], 10, _hoisted_6),
            (Vue.openBlock(true), Vue.createElementBlock(
              Vue.Fragment,
              null,
              Vue.renderList([Vue.unref(footerInfo).bottomMessage || []].flat(), (message, index) => {
                return Vue.openBlock(), Vue.createElementBlock("p", {
                  key: index,
                  innerHTML: message,
                  class: "flx-wrap-justify-center"
                }, null, 8, _hoisted_10);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ],
          64
          /* STABLE_FRAGMENT */
        )) : Vue.createCommentVNode("v-if", true)
      ], 10, _hoisted_1)) : Vue.createCommentVNode("v-if", true);
    };
  }
});

exports.default = _sfc_main;

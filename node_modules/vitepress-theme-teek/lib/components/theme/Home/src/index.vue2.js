'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_HomeFullscreenWallpaper_lang = require('../../HomeFullscreenWallpaper/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomePostList_lang = require('../../HomePostList/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeBanner_lang = require('../../HomeBanner/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeCardList_lang = require('../../HomeCardList/src/index.vue2.js');
var home = require('./home.js');

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = { key: 0 };
const _hoisted_3 = ["aria-label"];
const _hoisted_4 = ["aria-label"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "Home" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("home");
    const { t } = useLocale.useLocale();
    const { isHomePage } = index.usePageState();
    const { getTeekConfigRef } = index.useTeekConfig();
    const teekConfig = getTeekConfigRef(null, {
      teekHome: true,
      homeCardListPosition: "right",
      banner: {},
      wallpaper: {},
      bodyBgImg: {}
    });
    const homePostListInstance = Vue.ref(null);
    Vue.provide(home.postDataUpdateSymbol, () => homePostListInstance.value?.updateData());
    const isPaging = Vue.ref(false);
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass(Vue.unref(ns).b()),
        role: "main",
        "aria-label": Vue.unref(t)("tk.home.label")
      }, [
        Vue.unref(isHomePage) && (Vue.unref(teekConfig).banner.enabled ?? true) ? Vue.withDirectives((Vue.openBlock(), Vue.createElementBlock(
          "div",
          _hoisted_2,
          [
            Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_HomeBanner_lang.default), { disabled: isPaging.value }, Vue.createSlots({
              _: 2
              /* DYNAMIC */
            }, [
              Vue.renderList(_ctx.$slots, (_, name) => {
                return {
                  name,
                  fn: Vue.withCtx((scope) => [
                    Vue.renderSlot(_ctx.$slots, name, Vue.normalizeProps(Vue.guardReactiveProps(scope)))
                  ])
                };
              })
            ]), 1032, ["disabled"])
          ],
          512
          /* NEED_PATCH */
        )), [
          [Vue.vShow, !isPaging.value]
        ]) : Vue.createCommentVNode("v-if", true),
        Vue.createElementVNode(
          "div",
          {
            class: Vue.normalizeClass([Vue.unref(ns).e("content"), Vue.unref(ns).join("wallpaper-outside"), "flx-start-justify-center"])
          },
          [
            Vue.createElementVNode("div", {
              class: Vue.normalizeClass(Vue.unref(ns).e("content__post")),
              "aria-label": Vue.unref(t)("tk.home.postLabel")
            }, [
              Vue.renderSlot(_ctx.$slots, "teek-home-post-before"),
              Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_HomePostList_lang.default), {
                modelValue: isPaging.value,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isPaging.value = $event),
                ref_key: "homePostListInstance",
                ref: homePostListInstance
              }, Vue.createSlots({
                _: 2
                /* DYNAMIC */
              }, [
                Vue.renderList(_ctx.$slots, (_, name) => {
                  return {
                    name,
                    fn: Vue.withCtx((scope) => [
                      Vue.renderSlot(_ctx.$slots, name, Vue.normalizeProps(Vue.guardReactiveProps(scope)))
                    ])
                  };
                })
              ]), 1032, ["modelValue"]),
              Vue.renderSlot(_ctx.$slots, "teek-home-post-after")
            ], 10, _hoisted_3),
            Vue.unref(teekConfig).homeCardListPosition ? (Vue.openBlock(), Vue.createElementBlock("div", {
              key: 0,
              class: Vue.normalizeClass([Vue.unref(ns).e("content__info"), Vue.unref(teekConfig).homeCardListPosition === "left" ? Vue.unref(ns).is("left") : Vue.unref(ns).is("right")]),
              "aria-label": Vue.unref(t)("tk.home.cardLabel")
            }, [
              Vue.createVNode(
                Vue.unref(index_vue_vue_type_script_setup_true_name_HomeCardList_lang.default),
                null,
                Vue.createSlots({
                  _: 2
                  /* DYNAMIC */
                }, [
                  Vue.renderList(_ctx.$slots, (_, name) => {
                    return {
                      name,
                      fn: Vue.withCtx((scope) => [
                        Vue.renderSlot(_ctx.$slots, name, Vue.normalizeProps(Vue.guardReactiveProps(scope)))
                      ])
                    };
                  })
                ]),
                1024
                /* DYNAMIC_SLOTS */
              )
            ], 10, _hoisted_4)) : Vue.createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        ),
        Vue.unref(teekConfig).wallpaper.enabled && (Vue.unref(teekConfig).banner.bgStyle === "fullImg" || Vue.unref(teekConfig).bodyBgImg.imgSrc) ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_HomeFullscreenWallpaper_lang.default), { key: 1 })) : Vue.createCommentVNode("v-if", true)
      ], 10, _hoisted_1);
    };
  }
});

exports.default = _sfc_main;

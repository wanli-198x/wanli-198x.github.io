'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
var useWindowTransition = require('../../../../composables/useWindowTransition.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_ArticlePage_lang = require('../../../common/ArticlePage/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_ArticleTitle_lang = require('../../ArticleTitle/src/index.vue2.js');

const _hoisted_1 = { class: "count" };
const _hoisted_2 = { class: "vp-doc" };
const _hoisted_3 = { class: "year" };
const _hoisted_4 = { class: "count" };
const _hoisted_5 = { class: "month" };
const _hoisted_6 = { class: "count" };
const _hoisted_7 = ["href", "aria-label"];
const _hoisted_8 = { class: "date" };
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "ArchivesPage" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("archives");
    const { t } = useLocale.useLocale();
    const { frontmatter } = vitepress.useData();
    const posts = index.usePosts();
    const defaultLabel = Vue.computed(() => {
      const frontmatterConst = frontmatter.value;
      return {
        title: frontmatterConst.title ?? t("tk.archives.title"),
        totalCount: frontmatterConst.totalCount ?? t("tk.archives.totalCount"),
        year: frontmatterConst.year ?? t("tk.archives.year"),
        month: frontmatterConst.month ?? t("tk.archives.month"),
        count: frontmatterConst.count ?? t("tk.archives.count"),
        notFound: frontmatterConst.notFound ?? t("tk.archives.notFound")
      };
    });
    const windowTransition = index.useWindowTransitionConfig((config) => config.archives);
    const timelineItemListInstance = Vue.ref(null);
    const { start } = useWindowTransition.useWindowTransition(timelineItemListInstance, false);
    Vue.onMounted(() => {
      windowTransition.value && start();
    });
    return (_ctx, _cache) => {
      const _component_Content = Vue.resolveComponent("Content");
      return Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_ArticlePage_lang.default), {
        class: Vue.normalizeClass(Vue.unref(ns).b()),
        "aria-label": Vue.unref(t)("tk.archives.label")
      }, {
        default: Vue.withCtx(() => [
          Vue.renderSlot(_ctx.$slots, "teek-archives-top-before"),
          Vue.createElementVNode(
            "div",
            {
              class: Vue.normalizeClass(`${Vue.unref(ns).e("header")} flx-justify-between`)
            },
            [
              Vue.createElementVNode(
                "h1",
                null,
                Vue.toDisplayString(defaultLabel.value.title),
                1
                /* TEXT */
              ),
              Vue.createElementVNode(
                "div",
                _hoisted_1,
                Vue.toDisplayString(defaultLabel.value.totalCount.replace("{count}", Vue.unref(posts).sortPostsByDate.length)),
                1
                /* TEXT */
              )
            ],
            2
            /* CLASS */
          ),
          Vue.renderSlot(_ctx.$slots, "teek-archives-top-after"),
          Vue.createElementVNode("div", _hoisted_2, [
            Vue.createVNode(_component_Content)
          ]),
          Vue.createElementVNode(
            "div",
            {
              class: Vue.normalizeClass(Vue.unref(ns).e("timeline"))
            },
            [
              (Vue.openBlock(true), Vue.createElementBlock(
                Vue.Fragment,
                null,
                Vue.renderList(Vue.unref(posts).groupPostsByYearMonth, (monthPosts, year) => {
                  return Vue.openBlock(), Vue.createElementBlock(
                    Vue.Fragment,
                    { key: year },
                    [
                      Vue.createElementVNode(
                        "div",
                        {
                          class: Vue.normalizeClass(`${Vue.unref(ns).em("timeline", "year")} flx-justify-between`)
                        },
                        [
                          Vue.createElementVNode(
                            "div",
                            _hoisted_3,
                            Vue.toDisplayString(String(year).trim() === "NaN" ? defaultLabel.value.notFound : String(year).trim() + defaultLabel.value.year),
                            1
                            /* TEXT */
                          ),
                          Vue.createElementVNode(
                            "div",
                            _hoisted_4,
                            Vue.toDisplayString(Vue.unref(posts).groupPostsByYear[year].length + defaultLabel.value.count),
                            1
                            /* TEXT */
                          )
                        ],
                        2
                        /* CLASS */
                      ),
                      Vue.createElementVNode(
                        "div",
                        {
                          class: Vue.normalizeClass(Vue.unref(ns).e("timeline__m"))
                        },
                        [
                          (Vue.openBlock(true), Vue.createElementBlock(
                            Vue.Fragment,
                            null,
                            Vue.renderList(monthPosts, (p, month) => {
                              return Vue.openBlock(), Vue.createElementBlock(
                                Vue.Fragment,
                                { key: month },
                                [
                                  Vue.createElementVNode(
                                    "div",
                                    {
                                      class: Vue.normalizeClass(`${Vue.unref(ns).em("timeline__m", "month")} flx-justify-between`)
                                    },
                                    [
                                      Vue.createElementVNode(
                                        "div",
                                        _hoisted_5,
                                        Vue.toDisplayString(String(month) === "NaN" ? defaultLabel.value.notFound : month + defaultLabel.value.month),
                                        1
                                        /* TEXT */
                                      ),
                                      Vue.createElementVNode(
                                        "div",
                                        _hoisted_6,
                                        Vue.toDisplayString(p.length + defaultLabel.value.count),
                                        1
                                        /* TEXT */
                                      )
                                    ],
                                    2
                                    /* CLASS */
                                  ),
                                  Vue.createElementVNode("ul", null, [
                                    (Vue.openBlock(true), Vue.createElementBlock(
                                      Vue.Fragment,
                                      null,
                                      Vue.renderList(p, (item) => {
                                        return Vue.openBlock(), Vue.createElementBlock("li", {
                                          ref_for: true,
                                          ref_key: "timelineItemListInstance",
                                          ref: timelineItemListInstance,
                                          key: item.url
                                        }, [
                                          Vue.createElementVNode("a", {
                                            href: item.url && Vue.unref(vitepress.withBase)(item.url),
                                            "aria-label": `${item.title}`
                                          }, [
                                            Vue.createElementVNode(
                                              "span",
                                              _hoisted_8,
                                              Vue.toDisplayString(item.date?.slice(5, 10)),
                                              1
                                              /* TEXT */
                                            ),
                                            Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_ArticleTitle_lang.default), {
                                              post: item,
                                              "title-tag-props": { position: "right", size: "small" }
                                            }, null, 8, ["post"])
                                          ], 8, _hoisted_7)
                                        ]);
                                      }),
                                      128
                                      /* KEYED_FRAGMENT */
                                    ))
                                  ])
                                ],
                                64
                                /* STABLE_FRAGMENT */
                              );
                            }),
                            128
                            /* KEYED_FRAGMENT */
                          ))
                        ],
                        2
                        /* CLASS */
                      )
                    ],
                    64
                    /* STABLE_FRAGMENT */
                  );
                }),
                128
                /* KEYED_FRAGMENT */
              ))
            ],
            2
            /* CLASS */
          )
        ]),
        _: 3
        /* FORWARDED */
      }, 8, ["class", "aria-label"]);
    };
  }
});

exports.default = _sfc_main;

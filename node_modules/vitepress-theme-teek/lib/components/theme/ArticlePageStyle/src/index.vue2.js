'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');

var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace();
    const { getTeekConfigRef } = index.useTeekConfig();
    const themeConfig = getTeekConfigRef(null, {
      vpHome: true,
      pageStyle: "default"
    });
    const initPageStyle = async () => {
      if (!index$1.isClient) return;
      await Vue.nextTick();
      const tkLayoutDom = document.querySelector(`.${ns.join("layout")}`);
      ["default", "card", "card-nav", "segment", "segment-nav"].forEach(
        (item) => tkLayoutDom?.classList.remove(ns.join(item))
      );
      tkLayoutDom?.classList.add(ns.join(themeConfig.value.pageStyle));
    };
    Vue.watch(() => themeConfig.value.pageStyle, initPageStyle, { immediate: true });
    Vue.watch(() => themeConfig.value.vpHome, initPageStyle);
    return (_ctx, _cache) => {
      return null;
    };
  }
});

exports.default = _sfc_main;

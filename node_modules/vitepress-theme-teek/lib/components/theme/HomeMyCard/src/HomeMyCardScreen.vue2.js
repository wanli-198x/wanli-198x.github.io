'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
var useMediaQuery = require('../../../../composables/useMediaQuery.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');

const _hoisted_1 = ["src", "alt"];
const _hoisted_2 = ["aria-label"];
const _hoisted_3 = { class: "name" };
const _hoisted_4 = { class: "slogan" };
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "HomeMyCardScreen" },
  __name: "HomeMyCardScreen",
  setup(__props) {
    const ns = useNamespace.useNamespace("my-screen");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const blogger = getTeekConfigRef("blogger", {});
    const isShow = useMediaQuery.useMediaQuery("(max-width: 960px)");
    return (_ctx, _cache) => {
      return Vue.unref(isShow) && Vue.unref(blogger).name && Vue.unref(blogger).avatar && Vue.unref(blogger).slogan ? (Vue.openBlock(), Vue.createElementBlock(
        Vue.Fragment,
        { key: 0 },
        [
          Vue.renderSlot(_ctx.$slots, "teek-home-card-my-screen-before"),
          Vue.renderSlot(_ctx.$slots, "teek-home-card-my-screen", {}, () => [
            Vue.createElementVNode(
              "div",
              {
                class: Vue.normalizeClass(Vue.unref(ns).b())
              },
              [
                Vue.createElementVNode(
                  "div",
                  {
                    class: Vue.normalizeClass(Vue.unref(ns).e("avatar"))
                  },
                  [
                    Vue.unref(blogger).avatar ? (Vue.openBlock(), Vue.createElementBlock("img", {
                      key: 0,
                      src: Vue.unref(vitepress.withBase)(Vue.unref(blogger).avatar),
                      alt: Vue.unref(t)("tk.myCard.avatarAlt")
                    }, null, 8, _hoisted_1)) : Vue.createCommentVNode("v-if", true)
                  ],
                  2
                  /* CLASS */
                ),
                Vue.createElementVNode("div", {
                  class: Vue.normalizeClass(Vue.unref(ns).e("blogger")),
                  "aria-label": Vue.unref(t)("tk.myCard.bloggerLabel")
                }, [
                  Vue.createElementVNode(
                    "h3",
                    _hoisted_3,
                    Vue.toDisplayString(Vue.unref(blogger).name),
                    1
                    /* TEXT */
                  ),
                  Vue.createElementVNode(
                    "span",
                    _hoisted_4,
                    Vue.toDisplayString(Vue.unref(blogger).slogan),
                    1
                    /* TEXT */
                  )
                ], 10, _hoisted_2)
              ],
              2
              /* CLASS */
            )
          ]),
          Vue.renderSlot(_ctx.$slots, "teek-home-card-my-screen-after")
        ],
        64
        /* STABLE_FRAGMENT */
      )) : Vue.createCommentVNode("v-if", true);
    };
  }
});

exports.default = _sfc_main;

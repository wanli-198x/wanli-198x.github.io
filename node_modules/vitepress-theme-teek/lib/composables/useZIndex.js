'use strict';

var Vue = require('vue');
var index = require('../helper/dist/index.js');

const initial = {
  current: 0
};
const zIndex = Vue.ref(0);
const defaultInitialZIndex = 2e3;
const Z_INDEX_INJECTION_KEY = Symbol("tkZIndexContextKey");
const zIndexContextKey = Symbol("zIndexContextKey");
const useZIndex = (zIndexOverrides) => {
  const increasingInjection = Vue.getCurrentInstance() ? Vue.inject(Z_INDEX_INJECTION_KEY, initial) : initial;
  const zIndexInjection = zIndexOverrides || (Vue.getCurrentInstance() ? Vue.inject(zIndexContextKey, void 0) : void 0);
  const initialZIndex = Vue.computed(() => {
    const zIndexFromInjection = zIndexInjection?.value;
    return index.isNumber(zIndexFromInjection) ? zIndexFromInjection : defaultInitialZIndex;
  });
  const currentZIndex = Vue.computed(() => initialZIndex.value + zIndex.value);
  const nextZIndex = () => {
    increasingInjection.current++;
    zIndex.value = increasingInjection.current;
    return currentZIndex.value;
  };
  if (Vue.inject(Z_INDEX_INJECTION_KEY, void 0)) {
    console.warn(
      "ZIndexInjection",
      `Looks like you are using server rendering, you must provide a z-index provider to ensure the hydration process to be succeed
usage: app.provide(ZINDEX_INJECTION_KEY, { current: 0 })`
    );
  }
  return {
    initialZIndex,
    currentZIndex,
    nextZIndex
  };
};

exports.Z_INDEX_INJECTION_KEY = Z_INDEX_INJECTION_KEY;
exports.defaultInitialZIndex = defaultInitialZIndex;
exports.useZIndex = useZIndex;
exports.zIndexContextKey = zIndexContextKey;

@use "../../mixins/bem" as *;
@use "../../mixins/config" as *;
@use "../../mixins/mixins" as *;
@use "../../mixins/function" as *;

:root {
  @include set-css-var("message-bg-color", getCssVar("el-color-info-light-9"));
  @include set-css-var("message-border-color", var(--vp-c-border));
  @include set-css-var("message-border-width", 1px);
  @include set-css-var("message-border-radius", 4px);
  @include set-css-var("message-border-style", solid);
  @include set-css-var("message-padding", 11px 15px);
  @include set-css-var("message-close-size", 16px);
  @include set-css-var("message-close-icon-color", getCssVar("text-color-placeholder"));
  @include set-css-var("message-close-hover-color", var(--vp-c-brand-3));
  @include set-css-var("message-bg-color-overlay", #ffffff);
}

:root.dark {
  @include set-css-var("message-bg-color-overlay", #1d1e1f);
}

@include b(message) {
  width: fit-content;
  max-width: calc(100% - 32px);
  box-sizing: border-box;
  border-radius: getCssVar("message-border-radius");
  border-width: getCssVar("message-border-width");
  border-style: getCssVar("message-border-style");
  border-color: getCssVar("message-border-color");
  position: fixed;
  left: 50%;
  top: 20px;
  transform: translateX(-50%);
  background-color: getCssVar("message-bg-color");
  transition:
    opacity 0.2s,
    transform 0.4s,
    top 0.4s;
  padding: getCssVar("message-padding");
  display: flex;
  align-items: center;
  gap: 8px;

  @include is(center) {
    justify-content: center;
  }

  @include is(plain) {
    background-color: getCssVar("message-bg-color-overlay");
    border-color: getCssVar("message-bg-color-overlay");
    box-shadow: getCssVar("card-shadow");
  }

  p {
    margin: 0;
  }

  @each $type in (primary, success, info, warning, error) {
    @include m($type) {
      @include set-css-var("message-bg-color", getCssVar("el-color", $type, "light-9"));
      @include set-css-var("message-border-color", getCssVar("el-color", $type, "light-8"));
      @include set-css-var("message-text-color", getCssVar("el-color", $type));

      .#{$namespace}-message__content {
        color: getCssVar("message-text-color");
        overflow-wrap: break-word;
      }
    }

    & .#{$namespace}-message-icon--#{$type} {
      color: getCssVar("message-text-color");
    }
  }

  .#{$namespace}-message__badge {
    position: absolute;
    top: -8px;
    right: -8px;
  }

  @include e(content) {
    padding: 0;
    font-size: 14px;
    line-height: 1;
    &:focus {
      outline-width: 0;
    }
  }

  & .#{$namespace}-message__closeBtn {
    cursor: pointer;
    color: getCssVar("message-close-icon-color");
    font-size: getCssVar("message-close-size");

    &:focus {
      outline-width: 0;
    }
    &:hover {
      color: getCssVar("message-close-hover-color");
    }
  }

  // 克隆并自定义 ElMessage 样式，不会影响 ElMessage 原本样式，在 src/utils/message.ts 中调用自定义样式 ElMessage 方法即可，暗黑模式在 src/style/dark.scss 文件进行了适配
  &.antd {
    padding: 10px 13px !important;
    background: #ffffff !important;
    border-width: 0 !important;
    box-shadow:
      0 3px 6px -4px #0000001f,
      0 6px 16px #00000014,
      0 9px 28px 8px #0000000d !important;

    &.#{$namespace}-message.is-closable .#{$namespace}-message__content {
      padding-right: 17px !important;
    }

    .#{$namespace}-message__content {
      color: #000000d9 !important;
      pointer-events: all !important;
      background-image: initial !important;
    }

    .#{$namespace}-message__closeBtn {
      right: 9px !important;
      outline: none;
      border-radius: 4px;
      transition:
        background-color 0.2s,
        color 0.2s;

      &:hover {
        background-color: rgb(0 0 0 / 6%);
      }
    }
  }
}

.#{$namespace}-message-fade-enter-from,
.#{$namespace}-message-fade-leave-to {
  opacity: 0;
  transform: translate(-50%, -100%);
}

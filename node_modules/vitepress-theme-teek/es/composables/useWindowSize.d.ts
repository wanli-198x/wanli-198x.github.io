import { ShallowRef } from 'vue';
export interface UseWindowSizeOptions {
    /**
     * 初始宽度
     *
     * @default Number.POSITIVE_INFINITY
     */
    initialWidth?: number;
    /**
     * 初始高度
     *
     * @default Number.POSITIVE_INFINITY
     */
    initialHeight?: number;
    /**
     * 滚动条是否应包含在宽度和高度中
     * 仅当 type 为 inner 时有效`
     *
     * @default true
     */
    includeScrollbar?: boolean;
    /**
     * 获取窗口大小类型：innerXxx、outerXxx、visualViewportXxx
     *
     * @default 'inner'
     */
    type?: "inner" | "outer" | "visual";
}
/**
 * 实时获取窗口大小
 *
 * @param sizeChangedCallback 钩子函数，当窗口发生改变时调用
 * @param options 选项
 */
export declare const useWindowSize: (sizeChangedCallback?: (width: number, height: number) => undefined, options?: UseWindowSizeOptions) => {
    width: ShallowRef<number, number>;
    height: ShallowRef<number, number>;
    update: () => void;
    stop: () => void;
};
export type UseWindowSizeReturn = ReturnType<typeof useWindowSize>;

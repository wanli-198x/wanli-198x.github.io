import { defineComponent, createElementBlock, openBlock, unref, createElementVNode, normalizeClass, toDisplayString } from 'vue';
import { withBase } from 'vitepress';

const _hoisted_1 = ["href", "aria-label"];
const _hoisted_2 = { class: "friend-avatar skeleton-image" };
const _hoisted_3 = ["src", "alt"];
const _hoisted_4 = ["title"];
const _hoisted_5 = ["title"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ItemInfo",
  props: {
    item: {},
    ns: {}
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("a", {
        href: __props.item.link && unref(withBase)(__props.item.link),
        target: "_blank",
        class: "hover-color flx-align-center",
        "aria-label": __props.item.name
      }, [
        createElementVNode("div", _hoisted_2, [
          createElementVNode("img", {
            src: __props.item.avatar && unref(withBase)(__props.item.avatar),
            class: "avatar",
            alt: __props.item.alt || __props.item.name,
            "aria-hidden": "true",
            onLoad: _cache[0] || (_cache[0] = (e) => e.target?.classList.add("loaded")),
            onError: _cache[1] || (_cache[1] = (e) => e.target?.classList.add("loaded"))
          }, null, 40, _hoisted_3)
        ]),
        createElementVNode(
          "div",
          {
            class: normalizeClass(__props.ns.e("list__item__info"))
          },
          [
            createElementVNode("div", {
              class: "friend-name sle",
              title: __props.item.name
            }, toDisplayString(__props.item.name), 9, _hoisted_4),
            createElementVNode("div", {
              class: "friend-desc sle",
              title: __props.item.desc
            }, toDisplayString(__props.item.desc), 9, _hoisted_5)
          ],
          2
          /* CLASS */
        )
      ], 8, _hoisted_1);
    };
  }
});

export { _sfc_main as default };

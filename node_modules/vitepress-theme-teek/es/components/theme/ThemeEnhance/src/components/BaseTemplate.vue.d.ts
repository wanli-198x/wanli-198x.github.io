import { TkIconProps } from '../../../../common/Icon';
import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
interface TemplateProps {
    /**
     * 标题
     */
    title?: string;
    /**
     * Helper 内的描述
     */
    helperDesc?: string;
    /**
     * 图标
     */
    icon?: TkIconProps["icon"];
    /**
     * 提示信息
     */
    tips?: {
        title?: string;
        content?: string;
        icon?: TkIconProps["icon"];
    }[];
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 是否显示帮助
     */
    helper?: boolean;
    /**
     * 是否边框高亮
     */
    borderHighlight?: boolean;
}
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        title?(_: {}): any;
        'helper-title'?(_: {}): any;
        'helper-desc'?(_: {}): any;
        default?(_: {}): any;
        default?(_: {}): any;
    };
    refs: {
        titleElementRef: HTMLDivElement;
    };
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: DefineComponent<TemplateProps, {}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<TemplateProps> & Readonly<{}>, {}, {}, {}, {}, string, ComponentProvideOptions, false, {
    titleElementRef: HTMLDivElement;
}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

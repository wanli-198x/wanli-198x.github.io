import { defineComponent, ref, onMounted, nextTick, renderSlot, createCommentVNode, unref, createElementVNode, normalizeClass, createVNode } from 'vue';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import { useMediaQuery } from '../../../../composables/useMediaQuery.mjs';
import '../../../../composables/useZIndex.mjs';
import autoWidthIcon from '../../../../static/icons/theme-enhance/autoWidth.mjs';
import _sfc_main$1 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["title", "aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "index",
  setup(__props) {
    const ns = useNamespace("sidebar-trigger");
    const { t } = useLocale();
    const active = ref(false);
    const isLt960 = useMediaQuery("(max-width: 960px)");
    const toggleSideBar = () => {
      const layoutDom = document.querySelector(`.${ns.join("layout")}`);
      layoutDom && layoutDom.classList.toggle(ns.is("sidebar-collapse"));
      if (!active.value) {
        active.value = true;
        setTimeout(() => {
          active.value = false;
        }, 300);
      }
    };
    onMounted(async () => {
      await nextTick();
      const docDom = document.querySelector(".VPContent.has-sidebar");
      docDom?.classList.add("sidebar-trigger-transition");
    });
    return (_ctx, _cache) => {
      return !unref(isLt960) ? renderSlot(_ctx.$slots, "default", {
        key: 0,
        active: active.value,
        icon: unref(autoWidthIcon),
        toggleSideBar
      }, () => [
        createElementVNode("div", {
          class: normalizeClass([unref(ns).b(), unref(ns).is("active", active.value)]),
          onClick: toggleSideBar,
          title: unref(t)("tk.sidebarTrigger.label"),
          role: "button",
          "aria-label": unref(t)("tk.sidebarTrigger.label")
        }, [
          createElementVNode(
            "div",
            {
              class: normalizeClass([unref(ns).join("right-bottom-button__button")])
            },
            [
              createVNode(unref(_sfc_main$1), {
                icon: unref(autoWidthIcon),
                "aria-hidden": "true"
              }, null, 8, ["icon"])
            ],
            2
            /* CLASS */
          )
        ], 10, _hoisted_1)
      ]) : createCommentVNode("v-if", true);
    };
  }
});

export { _sfc_main as default };

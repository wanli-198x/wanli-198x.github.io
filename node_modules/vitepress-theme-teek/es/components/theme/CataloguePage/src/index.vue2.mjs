import { defineComponent, computed, resolveComponent, createBlock, openBlock, unref, normalizeClass, withCtx, renderSlot, createElementVNode, toDisplayString, createElementBlock, Fragment, renderList, createVNode } from 'vue';
import { useData } from 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import _sfc_main$1 from '../../../common/ArticlePage/src/index.vue2.mjs';
import _sfc_main$2 from './CatalogueItem.vue2.mjs';

const _hoisted_1 = { id: "catalogue-header-title" };
const _hoisted_2 = { class: "description" };
const _hoisted_3 = {
  id: "catalogue-list-title",
  class: "title"
};
const _hoisted_4 = { class: "flx-wrap-between" };
const _hoisted_5 = { class: "vp-doc" };
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "CataloguePage" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("catalogue");
    const { t } = useLocale();
    const { theme, frontmatter } = useData();
    const catalogues = computed(() => theme.value.catalogues?.inv[frontmatter.value.path]?.catalogues);
    return (_ctx, _cache) => {
      const _component_Content = resolveComponent("Content");
      return openBlock(), createBlock(unref(_sfc_main$1), {
        class: normalizeClass(unref(ns).b()),
        "aria-label": unref(t)("tk.catalogue.label")
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "teek-catalogue-top-before"),
          createElementVNode(
            "div",
            {
              class: normalizeClass(unref(ns).e("header")),
              role: "group",
              "aria-labelledby": "catalogue-header-title"
            },
            [
              createElementVNode(
                "h2",
                _hoisted_1,
                toDisplayString(unref(frontmatter).title),
                1
                /* TEXT */
              ),
              createElementVNode(
                "div",
                _hoisted_2,
                toDisplayString(unref(frontmatter).desc || unref(frontmatter).description),
                1
                /* TEXT */
              )
            ],
            2
            /* CLASS */
          ),
          renderSlot(_ctx.$slots, "teek-catalogue-top-after"),
          createElementVNode(
            "div",
            {
              class: normalizeClass(unref(ns).e("wrapper")),
              "aria-labelledby": "catalogue-list-title"
            },
            [
              createElementVNode(
                "div",
                _hoisted_3,
                toDisplayString(unref(frontmatter).pageTitle || unref(t)("tk.catalogue.title")),
                1
                /* TEXT */
              ),
              createElementVNode("ul", _hoisted_4, [
                (openBlock(true), createElementBlock(
                  Fragment,
                  null,
                  renderList(catalogues.value, (item, index) => {
                    return openBlock(), createBlock(_sfc_main$2, {
                      key: index,
                      item,
                      index: index + 1
                    }, null, 8, ["item", "index"]);
                  }),
                  128
                  /* KEYED_FRAGMENT */
                ))
              ])
            ],
            2
            /* CLASS */
          ),
          createElementVNode("div", _hoisted_5, [
            createVNode(_component_Content)
          ])
        ]),
        _: 3
        /* FORWARDED */
      }, 8, ["class", "aria-label"]);
    };
  }
});

export { _sfc_main as default };

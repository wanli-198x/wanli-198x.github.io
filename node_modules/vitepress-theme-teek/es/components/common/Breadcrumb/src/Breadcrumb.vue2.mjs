import { defineComponent, ref, provide, onMounted, createElementBlock, openBlock, unref, normalizeClass, renderSlot } from 'vue';
import 'vitepress';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import { breadcrumbKey } from './breadcrumb.mjs';
import { ns } from './namespace.mjs';

const _hoisted_1 = ["aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "Breadcrumb" },
  __name: "Breadcrumb",
  props: {
    separator: { default: "/" }
  },
  setup(__props) {
    const { t } = useLocale();
    const breadcrumb = ref();
    provide(breadcrumbKey, { separator: __props.separator });
    onMounted(() => {
      const items = breadcrumb.value?.querySelectorAll(`.${ns.e("item")}`);
      if (items?.length) {
        items[items.length - 1].setAttribute("aria-current", "page");
      }
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        ref_key: "breadcrumb",
        ref: breadcrumb,
        class: normalizeClass(unref(ns).b()),
        role: "navigation",
        "aria-label": unref(t)("tk.breadcrumb.label")
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 10, _hoisted_1);
    };
  }
});

export { _sfc_main as default };

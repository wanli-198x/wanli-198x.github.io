import { defineComponent, useModel, watch, createElementBlock, openBlock, unref } from 'vue';
import { useImageVerify } from './useImgCode.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ImageVerifyCode" },
  __name: "index",
  props: {
    "modelValue": { required: true },
    "modelModifiers": {}
  },
  emits: ["update:modelValue"],
  setup(__props, { expose: __expose }) {
    const { domRef, imgCode, setImgCode, getImgCode } = useImageVerify();
    const code = useModel(__props, "modelValue");
    watch(code, (newValue) => {
      setImgCode(newValue);
    });
    watch(imgCode, (newValue) => {
      code.value = newValue;
    });
    __expose({ getImgCode });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "canvas",
        {
          ref_key: "domRef",
          ref: domRef,
          width: "120",
          height: "40",
          class: "cursor-pointer",
          onClick: _cache[0] || (_cache[0] = //@ts-ignore
          (...args) => unref(getImgCode) && unref(getImgCode)(...args))
        },
        null,
        512
        /* NEED_PATCH */
      );
    };
  }
});

export { _sfc_main as default };

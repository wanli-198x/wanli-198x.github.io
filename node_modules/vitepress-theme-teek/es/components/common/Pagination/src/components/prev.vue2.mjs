import { defineComponent, computed, createElementBlock, openBlock, unref, createBlock, createCommentVNode, toDisplayString } from 'vue';
import 'vitepress';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../../composables/useLocale.mjs';
import '../../../../../composables/useZIndex.mjs';
import _sfc_main$1 from '../../../Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["disabled", "aria-label", "aria-disabled"];
const _hoisted_2 = { key: 0 };
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "PaginationPrev" },
  __name: "prev",
  props: {
    disabled: { type: Boolean },
    currentPage: {},
    prevText: {},
    prevIcon: {}
  },
  emits: ["click"],
  setup(__props) {
    const props = __props;
    const { t } = useLocale();
    const internalDisabled = computed(() => props.disabled || props.currentPage <= 1);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("button", {
        type: "button",
        class: "btn-prev",
        disabled: internalDisabled.value,
        "aria-label": __props.prevText || unref(t)("tk.pagination.prev"),
        "aria-disabled": internalDisabled.value,
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click", $event))
      }, [
        __props.prevText ? (openBlock(), createElementBlock(
          "span",
          _hoisted_2,
          toDisplayString(__props.prevText),
          1
          /* TEXT */
        )) : __props.prevIcon ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 1,
          icon: __props.prevIcon
        }, null, 8, ["icon"])) : createCommentVNode("v-if", true)
      ], 8, _hoisted_1);
    };
  }
});

export { _sfc_main as default };

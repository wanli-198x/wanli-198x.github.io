import { defineComponent, onMounted, createElementBlock, openBlock, normalizeClass, unref, createCommentVNode, createElementVNode, inject } from 'vue';
import { isClient } from '../../../../helper/dist/index.mjs';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useVpRouter } from '../../../../composables/useVpRouter.mjs';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import { walineContext } from './waline.mjs';

const _hoisted_1 = ["href", "integrity"];
const walineId = "waline";
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "CommentWaline" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace();
    const vpRouter = useVpRouter();
    const { getTeekConfig } = useTeekConfig();
    const walineOptions = getTeekConfig("comment", {}).options;
    const { serverURL, jsLink, cssLink, dark = "html[class='dark']", cssIntegrity, ...options } = walineOptions;
    let waline = null;
    const initWalineByInject = () => {
      const getWalineInstance = inject(walineContext, () => null);
      if (getWalineInstance) waline = getWalineInstance?.(`#${walineId}`, walineOptions);
      return waline;
    };
    const initWalineByJs = async () => {
      if (!jsLink) return;
      const { init } = await import(
        /* @vite-ignore */
        jsLink
      );
      waline = init({ dark, ...options, serverURL, el: `#${walineId}` });
    };
    const preventJump = () => {
      if (!isClient) return;
      const loginNickLink = document.querySelector(".wl-login-nick");
      loginNickLink && loginNickLink.removeAttribute("href");
    };
    onMounted(async () => {
      if (!initWalineByInject() && serverURL && jsLink) {
        await initWalineByJs();
        preventJump();
        return vpRouter.bindAfterRouteChange(ns.join("waline"), () => waline?.update());
      }
      console.error(
        "[Teek Error] Waline initialization failed. Please configure the 'jsLink' and 'serverURL' or provide the waline instance"
      );
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass(unref(ns).b("waline"))
        },
        [
          unref(cssLink) ? (openBlock(), createElementBlock("link", {
            key: 0,
            rel: "stylesheet",
            href: unref(cssLink),
            integrity: unref(cssIntegrity),
            crossorigin: "anonymous"
          }, null, 8, _hoisted_1)) : createCommentVNode("v-if", true),
          createElementVNode("div", { id: walineId })
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

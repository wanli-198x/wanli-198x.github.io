import { DefineComponent, ComponentOptionsMixin, PublicProps, ComponentProvideOptions } from 'vue';
declare const __VLS_defaults: {
    modelValue: boolean;
};
type __VLS_PublicProps = {
    modelValue?: typeof __VLS_defaults['modelValue'];
};
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        'teek-home-post-list'?(_: {
            currentPosts: {
                url: string;
                relativePath: string;
                src?: string | undefined;
                html?: string | undefined;
                frontmatter: Record<string, any>;
                excerpt?: string | undefined;
                author?: {
                    name: string;
                    link?: string | undefined;
                } | undefined;
                title?: string | undefined;
                date?: string | undefined;
                capture?: string | undefined;
            }[];
            transitionName: string;
        }): any;
    };
    refs: {
        postItemListInstance: HTMLDivElement;
    };
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: DefineComponent<__VLS_PublicProps, {
    updateData: () => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    "update:modelValue": (value: boolean) => any;
}, string, PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    "onUpdate:modelValue"?: ((value: boolean) => any) | undefined;
}>, {}, {}, {}, {}, string, ComponentProvideOptions, false, {
    postItemListInstance: HTMLDivElement;
}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

import { defineComponent, ref, computed, watch, nextTick, withDirectives, createCommentVNode, unref, createElementBlock, openBlock, normalizeStyle, normalizeClass, createElementVNode, createVNode, renderSlot, createBlock, Fragment, renderList, toDisplayString, vShow } from 'vue';
import { useData, useRoute, withBase } from 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import '../../../../composables/useZIndex.mjs';
import { useSidebar, useCommon, useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../ArticleBreadcrumb/src/index.vue2.mjs';
import _sfc_main$2 from '../../ArticleAnalyze/src/index.vue2.mjs';
import _sfc_main$3 from '../../HomeBanner/src/HomeBannerWaves.vue2.mjs';

const _hoisted_1 = ["src"];
const _hoisted_2 = {
  key: 0,
  class: "categories flx-center"
};
const _hoisted_3 = ["href", "title"];
const _hoisted_4 = {
  key: 1,
  class: "tags flx-center"
};
const _hoisted_5 = ["href", "title"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "index",
  setup(__props) {
    const loaded = ref(false);
    const ns = useNamespace("article-banner");
    const { frontmatter } = useData();
    const route = useRoute();
    const { hasSidebar } = useSidebar();
    const { isMobile } = useCommon();
    const { getTeekConfigRef } = useTeekConfig();
    const articleBannerConfig = getTeekConfigRef("articleBanner", {
      enabled: false,
      showCategory: true,
      showTag: true,
      defaultCoverImg: "",
      defaultCoverBgColor: ""
    });
    const postConfig = getTeekConfigRef("post", {
      defaultCoverImg: []
    });
    const imgSrc = computed(() => {
      const imgSrcList = [
        frontmatter.value.coverImg || articleBannerConfig.value.defaultCoverImg || postConfig.value.defaultCoverImg || []
      ].flat();
      if (!imgSrcList.length) return "";
      return imgSrcList[Math.floor(Math.random() * imgSrcList.length)];
    });
    const style = computed(() => {
      return {
        [ns.cssVarName("article-banner-bg-color")]: frontmatter.value.coverBgColor || articleBannerConfig.value.defaultCoverBgColor
      };
    });
    watch(
      () => route.path,
      async () => {
        await nextTick();
        loaded.value = true;
        setTimeout(() => loaded.value = false, 1);
      }
    );
    return (_ctx, _cache) => {
      return !unref(hasSidebar) && unref(articleBannerConfig).enabled ? withDirectives((openBlock(), createElementBlock(
        "div",
        {
          key: 0,
          class: normalizeClass(unref(ns).b()),
          style: normalizeStyle(style.value)
        },
        [
          createElementVNode(
            "div",
            {
              class: normalizeClass([unref(ns).e("wrapper"), "flx-justify-center"])
            },
            [
              imgSrc.value ? (openBlock(), createElementBlock(
                "div",
                {
                  key: 0,
                  class: normalizeClass(unref(ns).e("cover"))
                },
                [
                  createElementVNode("img", {
                    src: imgSrc.value,
                    class: "no-preview",
                    alt: "cover"
                  }, null, 8, _hoisted_1)
                ],
                2
                /* CLASS */
              )) : createCommentVNode("v-if", true),
              createElementVNode(
                "div",
                {
                  class: normalizeClass(unref(ns).e("info"))
                },
                [
                  renderSlot(_ctx.$slots, "teek-article-banner-info-top"),
                  !unref(isMobile) ? (openBlock(), createBlock(unref(_sfc_main$1), { key: 0 })) : createCommentVNode("v-if", true),
                  createElementVNode(
                    "div",
                    {
                      class: normalizeClass([unref(ns).e("meta"), "flx-center flx-wrap"])
                    },
                    [
                      unref(frontmatter).categories && unref(articleBannerConfig).showCategory ? (openBlock(), createElementBlock("div", _hoisted_2, [
                        (openBlock(true), createElementBlock(
                          Fragment,
                          null,
                          renderList(unref(frontmatter).categories, (category) => {
                            return openBlock(), createElementBlock("a", {
                              key: category,
                              href: unref(withBase)(`/categories?category=${category}`),
                              class: "meta-info category",
                              title: category
                            }, toDisplayString(category), 9, _hoisted_3);
                          }),
                          128
                          /* KEYED_FRAGMENT */
                        ))
                      ])) : createCommentVNode("v-if", true),
                      unref(frontmatter).tags && unref(articleBannerConfig).showTag ? (openBlock(), createElementBlock("div", _hoisted_4, [
                        (openBlock(true), createElementBlock(
                          Fragment,
                          null,
                          renderList(unref(frontmatter).tags, (tag) => {
                            return openBlock(), createElementBlock("a", {
                              key: tag,
                              href: unref(withBase)(`/tags?tag=${tag}`),
                              class: "meta-info tag",
                              title: tag
                            }, [
                              _cache[0] || (_cache[0] = createElementVNode(
                                "span",
                                null,
                                "#",
                                -1
                                /* CACHED */
                              )),
                              createElementVNode(
                                "span",
                                null,
                                toDisplayString(tag),
                                1
                                /* TEXT */
                              )
                            ], 8, _hoisted_5);
                          }),
                          128
                          /* KEYED_FRAGMENT */
                        ))
                      ])) : createCommentVNode("v-if", true)
                    ],
                    2
                    /* CLASS */
                  ),
                  createElementVNode(
                    "h1",
                    null,
                    toDisplayString(unref(frontmatter).title),
                    1
                    /* TEXT */
                  ),
                  createVNode(unref(_sfc_main$2), {
                    breadcrumb: false,
                    scope: "article-banner"
                  }),
                  renderSlot(_ctx.$slots, "teek-article-banner-info-bottom")
                ],
                2
                /* CLASS */
              )
            ],
            2
            /* CLASS */
          ),
          createVNode(unref(_sfc_main$3))
        ],
        6
        /* CLASS, STYLE */
      )), [
        [vShow, !loaded.value]
      ]) : createCommentVNode("v-if", true);
    };
  }
});

export { _sfc_main as default };

import { defineComponent, createElementBlock, openBlock, normalizeClass, unref, renderSlot, createBlock, createCommentVNode, toDisplayString } from 'vue';
import { ns } from '../namespace.mjs';
import _sfc_main$1 from '../../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = { key: 0 };
var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Title",
  props: {
    title: {},
    disabled: { type: Boolean },
    icon: {}
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass([unref(ns).e("title"), unref(ns).is("disabled", !!__props.disabled)])
        },
        [
          renderSlot(_ctx.$slots, "icon", {}, () => [
            __props.icon ? (openBlock(), createBlock(unref(_sfc_main$1), {
              key: 0,
              icon: __props.icon,
              size: 16
            }, null, 8, ["icon"])) : createCommentVNode("v-if", true)
          ]),
          renderSlot(_ctx.$slots, "default", {}, () => [
            __props.title ? (openBlock(), createElementBlock(
              "span",
              _hoisted_1,
              toDisplayString(__props.title),
              1
              /* TEXT */
            )) : createCommentVNode("v-if", true)
          ])
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

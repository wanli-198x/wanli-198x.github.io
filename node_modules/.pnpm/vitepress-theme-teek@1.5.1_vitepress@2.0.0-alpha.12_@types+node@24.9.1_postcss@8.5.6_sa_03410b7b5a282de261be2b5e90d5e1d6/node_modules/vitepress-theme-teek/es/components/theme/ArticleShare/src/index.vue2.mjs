import { defineComponent, computed, createElementBlock, openBlock, normalizeClass, unref, createElementVNode, createVNode, createTextVNode, toDisplayString } from 'vue';
import 'vitepress';
import { useClipboard } from '../../../../composables/useClipboard.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import shareIcon from '../../../../static/icons/share.mjs';
import thumbsIcon from '../../../../static/icons/thumbs.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = {
  key: 0,
  class: "flx-center"
};
const _hoisted_3 = {
  key: 1,
  class: "flx-center"
};
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ArticleShare" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("article-share");
    const { t } = useLocale();
    const { getTeekConfigRef } = useTeekConfig();
    const articleShareConfig = getTeekConfigRef("articleShare", {
      icon: shareIcon,
      text: t("tk.articleShare.text"),
      copiedIcon: thumbsIcon,
      copiedText: t("tk.articleShare.copiedText"),
      query: false,
      hash: false
    });
    const shareLink = computed(() => {
      const { hash, query } = articleShareConfig.value;
      const { origin, pathname, search } = location;
      return `${origin}${pathname}${query ? search : ""}${hash ? location.hash : ""}`;
    });
    const { copy, copied } = useClipboard(2e3);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass(unref(ns).b())
        },
        [
          createElementVNode("button", {
            class: normalizeClass([unref(ns).e("button"), { copied: unref(copied) }, "flx-center"]),
            "aria-label": unref(copied) ? unref(articleShareConfig).copiedText : unref(articleShareConfig).text,
            "aria-live": "polite",
            onClick: _cache[0] || (_cache[0] = ($event) => unref(copy)(shareLink.value))
          }, [
            !unref(copied) ? (openBlock(), createElementBlock("div", _hoisted_2, [
              createVNode(unref(_sfc_main$1), {
                icon: unref(shareIcon),
                style: { "margin-right": "4px" }
              }, null, 8, ["icon"]),
              createTextVNode(
                " " + toDisplayString(unref(articleShareConfig).text),
                1
                /* TEXT */
              )
            ])) : (openBlock(), createElementBlock("div", _hoisted_3, [
              createVNode(unref(_sfc_main$1), {
                icon: unref(thumbsIcon),
                style: { "margin-right": "4px" }
              }, null, 8, ["icon"]),
              createTextVNode(
                " " + toDisplayString(unref(articleShareConfig).copiedText),
                1
                /* TEXT */
              )
            ]))
          ], 10, _hoisted_1)
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

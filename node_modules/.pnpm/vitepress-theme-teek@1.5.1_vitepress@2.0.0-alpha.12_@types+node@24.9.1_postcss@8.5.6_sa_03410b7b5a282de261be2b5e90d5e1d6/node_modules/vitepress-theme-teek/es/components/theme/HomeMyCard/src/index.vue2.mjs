import { defineComponent, computed, createBlock, createCommentVNode, unref, openBlock, normalizeStyle, normalizeClass, withCtx, createElementBlock, createElementVNode, Fragment, renderList, toDisplayString } from 'vue';
import { withBase } from 'vitepress';
import { isValidURL } from '../../../../helper/dist/index.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/PageCard/src/index.vue2.mjs';
import _sfc_main$2 from '../../../common/Avatar/src/index.vue2.mjs';
import _sfc_main$3 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["href", "title", "aria-label"];
const _hoisted_3 = ["aria-label"];
const _hoisted_4 = { class: "name" };
const _hoisted_5 = { class: "slogan" };
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "HomeMyCard" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("my");
    const { t } = useLocale();
    const { getTeekConfigRef } = useTeekConfig();
    const bloggerConfig = getTeekConfigRef("blogger", { shape: "square", circleBgMask: true });
    const socialConfig = getTeekConfigRef("social", []);
    const shape = computed(() => bloggerConfig.value.shape.replace(/-.*$/, ""));
    const isCircleBgImg = computed(() => shape.value === "circle" && !!bloggerConfig.value.circleBgImg);
    const avatarBgStyle = computed(() => ({ backgroundImage: `url(${withBase(bloggerConfig.value.circleBgImg)})` }));
    const myCardColorStyle = computed(() => ({ color: bloggerConfig.value.color }));
    const isSrc = computed(() => {
      const icon = bloggerConfig.value.status?.icon;
      if (!icon) return false;
      return isValidURL(icon) || icon.startsWith("/");
    });
    return (_ctx, _cache) => {
      return unref(bloggerConfig).name ? (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 0,
        class: normalizeClass([unref(ns).b(), unref(ns).is("circle-bg", isCircleBgImg.value)]),
        style: normalizeStyle(myCardColorStyle.value),
        "aria-label": unref(t)("tk.myCard.label")
      }, {
        default: withCtx(() => [
          isCircleBgImg.value ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              class: normalizeClass([unref(ns).em("avatar__circle", "bg"), unref(ns).is("mask", unref(bloggerConfig).circleBgMask)]),
              style: normalizeStyle(avatarBgStyle.value)
            },
            null,
            6
            /* CLASS, STYLE */
          )) : createCommentVNode("v-if", true),
          createElementVNode(
            "div",
            {
              class: normalizeClass(`${unref(ns).e("avatar")} ${unref(bloggerConfig).shape} flx-center`)
            },
            [
              createElementVNode("div", null, [
                unref(bloggerConfig).avatar ? (openBlock(), createBlock(unref(_sfc_main$2), {
                  key: 0,
                  src: unref(withBase)(unref(bloggerConfig).avatar),
                  size: unref(bloggerConfig).shape === "square" ? "100%" : unref(bloggerConfig).circleSize ?? 100,
                  shape: shape.value,
                  "bg-color": "transparent",
                  alt: unref(t)("tk.myCard.avatarAlt"),
                  title: unref(t)("tk.myCard.avatarTitle"),
                  "aria-hidden": "true"
                }, null, 8, ["src", "size", "shape", "alt", "title"])) : (openBlock(), createBlock(unref(_sfc_main$2), {
                  key: 1,
                  size: unref(bloggerConfig).circleSize ?? 100,
                  shape: shape.value,
                  text: unref(bloggerConfig).name,
                  "text-size": 50,
                  "bg-color": unref(ns).cssVar("theme-color"),
                  "aria-hidden": "true"
                }, null, 8, ["size", "shape", "text", "bg-color"])),
                unref(bloggerConfig).status?.icon && shape.value?.startsWith("circle") ? (openBlock(), createBlock(unref(_sfc_main$2), {
                  key: 2,
                  src: isSrc.value ? unref(bloggerConfig).status.icon : "",
                  text: unref(bloggerConfig).status.icon,
                  size: unref(bloggerConfig).status.size ?? 26,
                  "icon-size": unref(bloggerConfig).status.size ?? 26,
                  "text-size": unref(bloggerConfig).status.size ?? 26,
                  title: unref(bloggerConfig).status.title,
                  circle: "",
                  "bg-color": "transparent",
                  class: "avatar-sticker",
                  "aria-hidden": "true"
                }, null, 8, ["src", "text", "size", "icon-size", "text-size", "title"])) : createCommentVNode("v-if", true)
              ])
            ],
            2
            /* CLASS */
          ),
          unref(socialConfig).length ? (openBlock(), createElementBlock("div", {
            key: 1,
            class: normalizeClass(`${unref(ns).e("icons")} flx-justify-around`),
            "aria-label": unref(t)("tk.myCard.socialLabel")
          }, [
            (openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(unref(socialConfig), (item, index) => {
                return openBlock(), createElementBlock("a", {
                  key: index,
                  href: item.link && unref(withBase)(item.link),
                  title: item.name,
                  target: "_blank",
                  "aria-label": item.name
                }, [
                  item.icon ? (openBlock(), createBlock(unref(_sfc_main$3), {
                    key: 0,
                    iconType: item.iconType,
                    icon: item.icon,
                    size: "20px",
                    hover: "",
                    imgAlt: item.imgAlt,
                    "aria-hidden": "true"
                  }, null, 8, ["iconType", "icon", "imgAlt"])) : createCommentVNode("v-if", true)
                ], 8, _hoisted_2);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ], 10, _hoisted_1)) : createCommentVNode("v-if", true),
          createElementVNode("div", {
            class: normalizeClass(unref(ns).e("blogger")),
            "aria-label": unref(t)("tk.myCard.bloggerLabel")
          }, [
            createElementVNode(
              "h3",
              _hoisted_4,
              toDisplayString(unref(bloggerConfig).name),
              1
              /* TEXT */
            ),
            createElementVNode(
              "span",
              _hoisted_5,
              toDisplayString(unref(bloggerConfig).slogan),
              1
              /* TEXT */
            )
          ], 10, _hoisted_3)
        ]),
        _: 1
        /* STABLE */
      }, 8, ["class", "style", "aria-label"])) : createCommentVNode("v-if", true);
    };
  }
});

export { _sfc_main as default };

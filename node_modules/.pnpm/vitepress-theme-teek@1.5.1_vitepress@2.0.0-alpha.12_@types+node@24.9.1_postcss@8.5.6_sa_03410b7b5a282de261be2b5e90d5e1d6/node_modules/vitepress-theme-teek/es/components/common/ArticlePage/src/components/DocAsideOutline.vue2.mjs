import { defineComponent, shallowRef, onMounted, ref, createElementBlock, openBlock, normalizeClass, unref, createElementVNode, createVNode, toDisplayString } from 'vue';
import { useData, onContentUpdated } from 'vitepress';
import { useNamespace } from '../../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import '../../../../../composables/useZIndex.mjs';
import { getHeaders, useActiveAnchor, resolveTitle } from './outline.mjs';
import _sfc_main$1 from './DocAsideOutlineItem.vue2.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "DocAsideOutline" },
  __name: "DocAsideOutline",
  setup(__props) {
    const ns = useNamespace("aside-outline");
    const { frontmatter, theme } = useData();
    const headers = shallowRef([]);
    onContentUpdated(() => {
      headers.value = getHeaders(frontmatter.value.outline ?? theme.value.outline);
    });
    onMounted(() => {
      if (!headers.value?.length) headers.value = getHeaders(frontmatter.value.outline ?? theme.value.outline);
    });
    const container = ref();
    const marker = ref();
    useActiveAnchor(container, marker);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "nav",
        {
          "aria-labelledby": "doc-outline-aria-label",
          class: normalizeClass([unref(ns).b(), { "has-outline": headers.value.length > 0 }]),
          ref_key: "container",
          ref: container
        },
        [
          createElementVNode(
            "div",
            {
              class: normalizeClass(unref(ns).e("content"))
            },
            [
              createElementVNode(
                "div",
                {
                  class: normalizeClass(unref(ns).m("marker")),
                  ref_key: "marker",
                  ref: marker
                },
                null,
                2
                /* CLASS */
              ),
              createElementVNode(
                "div",
                {
                  id: "doc-outline-aria-label",
                  "aria-level": "2",
                  class: normalizeClass(unref(ns).m("title")),
                  role: "heading"
                },
                toDisplayString(unref(resolveTitle)(unref(theme))),
                3
                /* TEXT, CLASS */
              ),
              createVNode(_sfc_main$1, {
                headers: headers.value,
                root: true
              }, null, 8, ["headers"])
            ],
            2
            /* CLASS */
          )
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

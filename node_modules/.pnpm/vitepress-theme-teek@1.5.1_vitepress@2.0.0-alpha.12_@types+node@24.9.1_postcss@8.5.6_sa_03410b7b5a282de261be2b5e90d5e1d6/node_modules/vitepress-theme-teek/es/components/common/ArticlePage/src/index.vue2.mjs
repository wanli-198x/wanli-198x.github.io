import { defineComponent, createElementBlock, openBlock, normalizeClass, unref, createCommentVNode, createElementVNode, createVNode, renderSlot } from 'vue';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import '../../../../composables/useZIndex.mjs';
import _sfc_main$1 from './components/DocAsideOutline.vue2.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ArticlePage" },
  __name: "index",
  props: {
    doc: { type: Boolean },
    aside: { type: Boolean }
  },
  setup(__props) {
    const ns = useNamespace("article-page");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass([unref(ns).b(), unref(ns).is("aside", __props.aside)])
        },
        [
          __props.aside ? (openBlock(), createElementBlock(
            "div",
            {
              key: 0,
              class: normalizeClass(unref(ns).e("aside"))
            },
            [
              createElementVNode(
                "div",
                {
                  class: normalizeClass(unref(ns).e("aside__container"))
                },
                [
                  createVNode(_sfc_main$1)
                ],
                2
                /* CLASS */
              )
            ],
            2
            /* CLASS */
          )) : createCommentVNode("v-if", true),
          createElementVNode(
            "div",
            {
              class: normalizeClass([unref(ns).join("doc"), { "vp-doc": __props.doc }])
            },
            [
              createElementVNode("div", null, [
                renderSlot(_ctx.$slots, "default")
              ])
            ],
            2
            /* CLASS */
          )
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

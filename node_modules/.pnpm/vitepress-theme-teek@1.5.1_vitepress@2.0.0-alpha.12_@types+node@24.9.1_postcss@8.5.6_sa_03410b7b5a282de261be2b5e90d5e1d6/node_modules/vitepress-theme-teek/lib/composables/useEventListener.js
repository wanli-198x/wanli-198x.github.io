'use strict';

var Vue = require('vue');
var useScopeDispose = require('./useScopeDispose.js');
var index = require('../helper/dist/index.js');

const useEventListener = (target, event, handler, options) => {
  const cleanups = [];
  const cleanup = () => {
    cleanups.forEach((fn) => fn());
    cleanups.length = 0;
  };
  const register = (el2, event2, listener, options2) => {
    el2.addEventListener(event2, listener, options2);
    return () => el2.removeEventListener(event2, listener, options2);
  };
  const el = Vue.computed(() => {
    if (!index.isClient) return;
    const plain = Vue.toValue(target) || window;
    return plain?.$el ?? plain;
  });
  const stopWatch = Vue.watch(
    el,
    (val) => {
      cleanup();
      if (!val) return;
      cleanups.push(register(val, event, handler, options));
    },
    { flush: "post", immediate: true }
    // flush: "post" 确保在组件挂载后执行
  );
  const stop = () => {
    stopWatch();
    cleanup();
  };
  useScopeDispose.useScopeDispose(cleanup);
  return stop;
};

exports.useEventListener = useEventListener;

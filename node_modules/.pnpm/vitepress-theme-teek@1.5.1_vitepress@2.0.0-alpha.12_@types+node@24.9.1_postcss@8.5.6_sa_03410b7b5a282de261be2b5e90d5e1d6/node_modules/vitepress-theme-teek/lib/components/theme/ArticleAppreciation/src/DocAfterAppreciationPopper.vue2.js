'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var aliPay = require('../../../../static/icons/aliPay.js');
var weChatPay = require('../../../../static/icons/weChatPay.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');
var index_vue_vue_type_script_setup_true_name_Popover_lang = require('../../../common/Popover/src/index.vue2.js');

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["innerHTML", "aria-expanded", "aria-controls"];
const _hoisted_3 = ["aria-expanded", "aria-controls"];
const _hoisted_4 = ["innerHTML"];
const _hoisted_5 = ["aria-label"];
const _hoisted_6 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "DocAfterAppreciationPopper" },
  __name: "DocAfterAppreciationPopper",
  setup(__props) {
    const ns = useNamespace.useNamespace("article-appreciation");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const appreciateConfig = getTeekConfigRef("appreciation", { position: "" });
    const showContent = Vue.ref(false);
    const docAfterPopperOptions = Vue.computed(
      () => ({ trigger: "click", ...appreciateConfig.value.options })
    );
    const icon = Vue.computed(() => {
      const { icon: icon2 } = docAfterPopperOptions.value;
      if (icon2 === "aliPay") return aliPay.default;
      if (icon2 === "weChatPay") return weChatPay.default;
      return icon2;
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass(Vue.unref(ns).b()),
        "aria-label": Vue.unref(t)("tk.articleAppreciation.label")
      }, [
        Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_Popover_lang.default), {
          modelValue: showContent.value,
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => showContent.value = $event),
          trigger: docAfterPopperOptions.value.trigger
        }, {
          reference: Vue.withCtx(() => [
            docAfterPopperOptions.value.buttonHtml ? (Vue.openBlock(), Vue.createElementBlock("div", {
              key: 0,
              innerHTML: docAfterPopperOptions.value.buttonHtml,
              role: "button",
              "aria-expanded": showContent.value,
              "aria-controls": `${Vue.unref(ns).e("content")}`
            }, null, 8, _hoisted_2)) : docAfterPopperOptions.value.title ? (Vue.openBlock(), Vue.createElementBlock("button", {
              key: 1,
              class: Vue.normalizeClass(Vue.unref(ns).e("button")),
              "aria-expanded": showContent.value,
              "aria-controls": `${Vue.unref(ns).e("content")}`,
              "aria-live": "polite"
            }, [
              icon.value ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                key: 0,
                class: Vue.normalizeClass(Vue.unref(ns).e("button__icon")),
                icon: icon.value,
                size: 16,
                "aria-hidden": "true"
              }, null, 8, ["class", "icon"])) : Vue.createCommentVNode("v-if", true),
              docAfterPopperOptions.value.title ? (Vue.openBlock(), Vue.createElementBlock("span", {
                key: 1,
                innerHTML: docAfterPopperOptions.value.title
              }, null, 8, _hoisted_4)) : Vue.createCommentVNode("v-if", true)
            ], 10, _hoisted_3)) : Vue.createCommentVNode("v-if", true)
          ]),
          default: Vue.withCtx(() => [
            Vue.createElementVNode("div", {
              class: Vue.normalizeClass([Vue.unref(ns).e("content"), Vue.unref(ns).m("doc-after-popper")]),
              "aria-label": Vue.unref(t)("tk.articleAppreciation.contentLabel")
            }, [
              Vue.createElementVNode("div", {
                class: Vue.normalizeClass(Vue.unref(ns).e("content")),
                innerHTML: docAfterPopperOptions.value.content
              }, null, 10, _hoisted_6)
            ], 10, _hoisted_5)
          ]),
          _: 1
          /* STABLE */
        }, 8, ["modelValue", "trigger"])
      ], 10, _hoisted_1);
    };
  }
});

exports.default = _sfc_main;

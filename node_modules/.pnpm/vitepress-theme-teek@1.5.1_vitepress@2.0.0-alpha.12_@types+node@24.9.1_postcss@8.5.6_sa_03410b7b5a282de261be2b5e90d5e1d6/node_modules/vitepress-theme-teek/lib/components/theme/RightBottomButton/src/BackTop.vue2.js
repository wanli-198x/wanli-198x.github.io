'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
var useEventListener = require('../../../../composables/useEventListener.js');
require('vitepress');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useDebounce = require('../../../../composables/useDebounce.js');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var rocket = require('../../../../static/icons/rocket.js');
var index = require('../../ConfigProvider/index.js');
var method = require('../../../common/Message/src/method.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');
var namespace = require('./namespace.js');

const _hoisted_1 = ["title", "aria-label", "aria-valuenow"];
const _hoisted_2 = {
  key: 0,
  class: "content"
};
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "BackTop" },
  __name: "BackTop",
  setup(__props) {
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const backTopConfig = getTeekConfigRef("backTop", {
      enabled: true,
      content: "progress"
    });
    const scrollTop = Vue.ref(0);
    const showToTop = Vue.computed(() => scrollTop.value > 100);
    const progress = Vue.ref(0);
    const scrollToTop = useDebounce.useDebounce(
      () => {
        if (!index$1.isClient) return;
        document.querySelector("html")?.scrollIntoView({ behavior: "smooth" });
        setTimeout(() => {
          backTopConfig.value.done?.(method.default);
        }, 600);
      },
      500,
      true
    );
    const watchScroll = () => {
      scrollTop.value = document.documentElement.scrollTop || document.body.scrollTop || 0;
      updateScrollProgress();
    };
    const updateScrollProgress = () => {
      const p = window.scrollY / (document.documentElement.scrollHeight - window.innerHeight);
      progress.value = Math.round(p * 100);
    };
    Vue.onMounted(() => {
      updateScrollProgress();
    });
    useEventListener.useEventListener(() => window, "scroll", watchScroll);
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(Vue.Transition, {
        name: Vue.unref(namespace.ns).join("fade")
      }, {
        default: Vue.withCtx(() => [
          Vue.renderSlot(_ctx.$slots, "default", {
            show: showToTop.value,
            progress: progress.value,
            icon: Vue.unref(rocket.default),
            scrollToTop: Vue.unref(scrollToTop)
          }, () => [
            Vue.withDirectives(Vue.createElementVNode("div", {
              title: Vue.unref(t)("tk.rightBottomButton.backTopTitle"),
              class: Vue.normalizeClass([Vue.unref(namespace.ns).e("button"), "back-top"]),
              onClick: _cache[0] || (_cache[0] = //@ts-ignore
              (...args) => Vue.unref(scrollToTop) && Vue.unref(scrollToTop)(...args)),
              style: Vue.normalizeStyle({ [Vue.unref(namespace.ns).cssVarName("progress")]: progress.value }),
              role: "button",
              "aria-label": Vue.unref(t)("tk.rightBottomButton.backTopTitle"),
              "aria-valuenow": progress.value,
              "aria-valuemin": "0",
              "aria-valuemax": "100"
            }, [
              Vue.unref(backTopConfig).content === "progress" ? (Vue.openBlock(), Vue.createElementBlock(
                "span",
                _hoisted_2,
                Vue.toDisplayString(progress.value),
                1
                /* TEXT */
              )) : Vue.unref(backTopConfig).content === "icon" ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                key: 1,
                icon: Vue.unref(rocket.default),
                "aria-hidden": "true"
              }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true)
            ], 14, _hoisted_1), [
              [Vue.vShow, showToTop.value]
            ])
          ])
        ]),
        _: 3
        /* FORWARDED */
      }, 8, ["name"]);
    };
  }
});

exports.default = _sfc_main;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useVpRouter = require('../../../../composables/useVpRouter.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var waline = require('./waline.js');

const _hoisted_1 = ["href", "integrity"];
const walineId = "waline";
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "CommentWaline" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace();
    const vpRouter = useVpRouter.useVpRouter();
    const { getTeekConfig } = index.useTeekConfig();
    const walineOptions = getTeekConfig("comment", {}).options;
    const { serverURL, jsLink, cssLink, dark = "html[class='dark']", cssIntegrity, ...options } = walineOptions;
    let waline$1 = null;
    const initWalineByInject = () => {
      const getWalineInstance = Vue.inject(waline.walineContext, () => null);
      if (getWalineInstance) waline$1 = getWalineInstance?.(`#${walineId}`, walineOptions);
      return waline$1;
    };
    const initWalineByJs = async () => {
      if (!jsLink) return;
      const { init } = await import(
        /* @vite-ignore */
        jsLink
      );
      waline$1 = init({ dark, ...options, serverURL, el: `#${walineId}` });
    };
    const preventJump = () => {
      if (!index$1.isClient) return;
      const loginNickLink = document.querySelector(".wl-login-nick");
      loginNickLink && loginNickLink.removeAttribute("href");
    };
    Vue.onMounted(async () => {
      if (!initWalineByInject() && serverURL && jsLink) {
        await initWalineByJs();
        preventJump();
        return vpRouter.bindAfterRouteChange(ns.join("waline"), () => waline$1?.update());
      }
      console.error(
        "[Teek Error] Waline initialization failed. Please configure the 'jsLink' and 'serverURL' or provide the waline instance"
      );
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass(Vue.unref(ns).b("waline"))
        },
        [
          Vue.unref(cssLink) ? (Vue.openBlock(), Vue.createElementBlock("link", {
            key: 0,
            rel: "stylesheet",
            href: Vue.unref(cssLink),
            integrity: Vue.unref(cssIntegrity),
            crossorigin: "anonymous"
          }, null, 8, _hoisted_1)) : Vue.createCommentVNode("v-if", true),
          Vue.createElementVNode("div", { id: walineId })
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;

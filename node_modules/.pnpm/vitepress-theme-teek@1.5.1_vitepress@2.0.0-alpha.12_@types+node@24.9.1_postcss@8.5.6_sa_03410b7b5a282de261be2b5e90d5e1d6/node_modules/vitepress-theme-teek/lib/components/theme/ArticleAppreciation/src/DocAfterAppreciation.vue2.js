'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useLocale = require('../../../../composables/useLocale.js');
require('../../../../composables/useZIndex.js');
var aliPay = require('../../../../static/icons/aliPay.js');
var weChatPay = require('../../../../static/icons/weChatPay.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["innerHTML", "aria-expanded", "aria-controls"];
const _hoisted_3 = ["aria-expanded", "aria-controls"];
const _hoisted_4 = ["innerHTML"];
const _hoisted_5 = ["innerHTML"];
const _hoisted_6 = ["aria-label"];
const _hoisted_7 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "DocAfterAppreciation" },
  __name: "DocAfterAppreciation",
  setup(__props) {
    const ns = useNamespace.useNamespace("article-appreciation");
    const { t } = useLocale.useLocale();
    const { getTeekConfigRef } = index.useTeekConfig();
    const appreciateConfig = getTeekConfigRef("appreciation", { position: "" });
    const docAfterOptions = Vue.computed(() => appreciateConfig.value.options || { expand: false });
    const showContent = Vue.ref(docAfterOptions.value.expand);
    const icon = Vue.computed(() => {
      const { icon: icon2 } = docAfterOptions.value;
      if (icon2 === "aliPay") return aliPay.default;
      if (icon2 === "weChatPay") return weChatPay.default;
      return icon2;
    });
    const toggleShowContent = () => {
      showContent.value = !showContent.value;
    };
    Vue.watch(
      () => docAfterOptions.value.expand,
      (newValue) => {
        showContent.value = newValue;
      }
    );
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass([Vue.unref(ns).b(), Vue.unref(ns).m("doc-after")]),
        "aria-label": Vue.unref(t)("tk.articleAppreciation.label")
      }, [
        docAfterOptions.value.buttonHtml ? (Vue.openBlock(), Vue.createElementBlock("div", {
          key: 0,
          innerHTML: docAfterOptions.value.buttonHtml,
          role: "button",
          "aria-expanded": showContent.value,
          "aria-controls": `${Vue.unref(ns).e("content")}`
        }, null, 8, _hoisted_2)) : docAfterOptions.value.expandTitle || docAfterOptions.value.collapseTitle ? (Vue.openBlock(), Vue.createElementBlock("button", {
          key: 1,
          class: Vue.normalizeClass(Vue.unref(ns).e("button")),
          onClick: toggleShowContent,
          "aria-expanded": showContent.value,
          "aria-controls": `${Vue.unref(ns).e("content")}`,
          "aria-live": "polite"
        }, [
          icon.value ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
            key: 0,
            class: Vue.normalizeClass(Vue.unref(ns).e("button__icon")),
            icon: icon.value,
            size: 16,
            "aria-hidden": "true"
          }, null, 8, ["class", "icon"])) : Vue.createCommentVNode("v-if", true),
          showContent.value ? (Vue.openBlock(), Vue.createElementBlock("span", {
            key: 1,
            innerHTML: docAfterOptions.value.collapseTitle
          }, null, 8, _hoisted_4)) : (Vue.openBlock(), Vue.createElementBlock("span", {
            key: 2,
            innerHTML: docAfterOptions.value.expandTitle
          }, null, 8, _hoisted_5))
        ], 10, _hoisted_3)) : Vue.createCommentVNode("v-if", true),
        Vue.createVNode(Vue.Transition, {
          name: Vue.unref(ns).join("fade")
        }, {
          default: Vue.withCtx(() => [
            showContent.value ? (Vue.openBlock(), Vue.createElementBlock("div", {
              key: 0,
              class: Vue.normalizeClass(Vue.unref(ns).e("content")),
              "aria-label": Vue.unref(t)("tk.articleAppreciation.contentLabel")
            }, [
              Vue.createElementVNode("div", {
                class: Vue.normalizeClass(Vue.unref(ns).e("content")),
                innerHTML: docAfterOptions.value.content
              }, null, 10, _hoisted_7)
            ], 10, _hoisted_6)) : Vue.createCommentVNode("v-if", true)
          ]),
          _: 1
          /* STABLE */
        }, 8, ["name"])
      ], 10, _hoisted_1);
    };
  }
});

exports.default = _sfc_main;

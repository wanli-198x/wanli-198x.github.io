'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useVpRouter = require('../../../../composables/useVpRouter.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var twikoo = require('./twikoo.js');

const _hoisted_1 = ["href", "integrity"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "CommentTwikoo" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace();
    const vpRouter = useVpRouter.useVpRouter();
    const { getTeekConfig } = index.useTeekConfig();
    const twikooOptions = getTeekConfig("comment", {}).options;
    const {
      envId,
      jsLink = "https://cdn.jsdelivr.net/npm/twikoo@{version}/dist/twikoo.nocss.js",
      jsIntegrity,
      cssLink = "https://cdn.jsdelivr.net/npm/twikoo@{version}/dist/twikoo.css",
      version = "1.6.44",
      katex,
      timeout = 700,
      ...options
    } = twikooOptions;
    const initTwikoo = () => {
      if (!index$1.isClient) return console.error("[Teek Error] Not in a client");
      if (!envId) return console.error("[Teek Error] Twikoo initialization failed. Please configure the 'envId'");
      const getTwikooInstance = Vue.inject(twikoo.twikooContext, () => null);
      const twikooOption = { ...options, envId };
      if (getTwikooInstance) getTwikooInstance("#twikoo", twikooOption);
      else if (window.twikoo) window.twikoo.init({ ...twikooOption, el: "#twikoo" });
    };
    const twikooJs = Vue.ref(null);
    const initJs = () => {
      const t = twikooJs.value;
      if (t) t.onload = initTwikoo;
    };
    const reloadTwikoo = (to) => {
      if (to) setTimeout(initTwikoo, timeout);
    };
    const initCss = () => {
      fetch(cssLink.replace("{version}", version)).then((response) => {
        if (!response.ok) throw new Error("[Teek Error] Twikoo Css Link Network response was not ok");
        return response.text();
      }).then((data) => {
        if (document.getElementById("twikoo-css")) return;
        const style = document.createElement("style");
        style.type = "text/css";
        style.id = "twikoo-css";
        style.textContent = `.${ns.b("twikoo")} {${data}}`;
        document.head.appendChild(style);
      });
    };
    Vue.onMounted(() => {
      initJs();
      initCss();
      twikooJs.value && vpRouter.bindAfterRouteChange(ns.join("twikoo"), (href) => reloadTwikoo(href));
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass(Vue.unref(ns).b("twikoo"))
        },
        [
          Vue.createCommentVNode(" KaTeX "),
          Vue.unref(katex) ? (Vue.openBlock(), Vue.createElementBlock(
            Vue.Fragment,
            { key: 0 },
            [
              Vue.createElementVNode("link", {
                rel: "stylesheet",
                href: Vue.unref(katex).cssLink,
                integrity: Vue.unref(katex).cssIntegrity,
                crossorigin: "anonymous"
              }, null, 8, _hoisted_1),
              (Vue.openBlock(), Vue.createBlock(Vue.resolveDynamicComponent("script"), {
                defer: "",
                src: Vue.unref(katex).coreJsLink,
                integrity: Vue.unref(katex).coreJsIntegrity,
                crossorigin: "anonymous"
              }, null, 8, ["src", "integrity"])),
              (Vue.openBlock(), Vue.createBlock(Vue.resolveDynamicComponent("script"), {
                defer: "",
                src: Vue.unref(katex).renderJsLink,
                integrity: Vue.unref(katex).renderJsIntegrity,
                crossorigin: "anonymous"
              }, null, 8, ["src", "integrity"]))
            ],
            64
            /* STABLE_FRAGMENT */
          )) : Vue.createCommentVNode("v-if", true),
          _cache[0] || (_cache[0] = Vue.createElementVNode(
            "div",
            { id: "twikoo" },
            null,
            -1
            /* CACHED */
          )),
          (Vue.openBlock(), Vue.createBlock(Vue.resolveDynamicComponent("script"), {
            src: Vue.unref(jsLink).replace("{version}", Vue.unref(version)),
            integrity: Vue.unref(jsIntegrity),
            crossorigin: "anonymous",
            ref_key: "twikooJs",
            ref: twikooJs
          }, null, 8, ["src", "integrity"]))
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;

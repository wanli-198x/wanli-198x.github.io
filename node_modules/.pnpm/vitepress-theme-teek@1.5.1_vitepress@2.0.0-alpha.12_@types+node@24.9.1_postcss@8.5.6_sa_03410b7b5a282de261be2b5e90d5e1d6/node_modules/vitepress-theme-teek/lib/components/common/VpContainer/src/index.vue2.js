'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
require('../../../../composables/useZIndex.js');

const _hoisted_1 = {
  key: 0,
  class: "custom-block-title"
};
const _hoisted_2 = ["innerHTML"];
const _hoisted_3 = { key: 1 };
const _hoisted_4 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "VpContainer" },
  __name: "index",
  props: {
    type: { default: "tip" },
    title: {},
    text: { default: "" }
  },
  setup(__props) {
    const ns = useNamespace.useNamespace("vp-container");
    const slots = Vue.useSlots();
    const hasTitle = Vue.computed(() => __props.title || slots.title);
    const hasText = Vue.computed(() => __props.text || slots.default);
    return (_ctx, _cache) => {
      return hasTitle.value || hasText.value ? (Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          key: 0,
          class: Vue.normalizeClass([Vue.unref(ns).b(), "vp-doc"])
        },
        [
          Vue.createElementVNode(
            "div",
            {
              class: Vue.normalizeClass([__props.type, "custom-block", { "no-title": !__props.title }])
            },
            [
              hasTitle.value ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
                Vue.renderSlot(_ctx.$slots, "title", {}, () => [
                  Vue.createElementVNode("span", { innerHTML: __props.title }, null, 8, _hoisted_2)
                ])
              ])) : Vue.createCommentVNode("v-if", true),
              hasText.value ? (Vue.openBlock(), Vue.createElementBlock("p", _hoisted_3, [
                Vue.renderSlot(_ctx.$slots, "default", {}, () => [
                  Vue.createElementVNode("span", { innerHTML: __props.text }, null, 8, _hoisted_4)
                ])
              ])) : Vue.createCommentVNode("v-if", true)
            ],
            2
            /* CLASS */
          )
        ],
        2
        /* CLASS */
      )) : Vue.createCommentVNode("v-if", true);
    };
  }
});

exports.default = _sfc_main;

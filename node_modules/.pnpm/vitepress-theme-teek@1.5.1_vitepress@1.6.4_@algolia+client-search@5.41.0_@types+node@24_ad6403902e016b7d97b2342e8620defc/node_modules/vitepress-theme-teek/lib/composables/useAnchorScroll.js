'use strict';

var Vue = require('vue');
var vitepress = require('vitepress');
var useEventListener = require('./useEventListener.js');
var index = require('../helper/dist/index.js');
var useMounted = require('./useMounted.js');

const useAnchorScroll = () => {
  const { theme } = vitepress.useData();
  const currentAnchor = Vue.reactive({ id: "", top: -1 });
  const calculateCurrentAnchor = () => {
    const anchors = document.querySelectorAll(".content-container .main :is(h1, h2, h3, h4, h5, h6)");
    for (let i = 0; i < anchors.length; i++) {
      const anchor = anchors[i];
      const computedStyle = window.getComputedStyle(anchor);
      if (computedStyle.display === "none") break;
      const rect = anchor.getBoundingClientRect();
      if (rect.top <= 150 && anchor.id !== currentAnchor.id) {
        currentAnchor.id = anchor.id;
        currentAnchor.top = rect.top;
      }
    }
  };
  useMounted.useMounted(() => {
    useEventListener.useEventListener(window, "scroll", calculateCurrentAnchor);
  });
  const startWatch = () => {
    if (theme.value.anchorScroll === false) return;
    Vue.watch(
      () => currentAnchor.id,
      (val) => {
        if (!index.isClient || !val) return;
        window.history.replaceState(history.state || null, "", `#${val}`);
      }
    );
  };
  return { startWatch };
};

exports.useAnchorScroll = useAnchorScroll;

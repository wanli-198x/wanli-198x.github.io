'use strict';

var Vue = require('vue');
var zhCn = require('../locale/lang/zh-cn.js');
var index = require('../helper/dist/index.js');

const localeContextKey = Symbol("localeContextKey");
const useLocale = (localeOverride) => {
  const locale = localeOverride || Vue.inject(localeContextKey, Vue.ref());
  const finalLocale = Vue.computed(() => locale?.value || zhCn.default);
  const lang = Vue.computed(() => finalLocale.value.lang);
  const localeRef = Vue.isRef(finalLocale) ? finalLocale : Vue.ref(finalLocale);
  const translate = (path, option, locale2) => {
    return index.get(locale2, path, path).replace(/\{(\w+)\}/g, (_, key) => `${option?.[key] ?? `{${key}}`}`);
  };
  return {
    lang,
    locale: localeRef,
    t: (path, option) => {
      return translate(path, option, finalLocale.value);
    },
    translate
  };
};

exports.localeContextKey = localeContextKey;
exports.useLocale = useLocale;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var vitepress = require('vitepress');
var index$1 = require('../../../../helper/dist/index.js');
var index = require('../../ConfigProvider/index.js');
var themeEnhance = require('../../ThemeEnhance/src/themeEnhance.js');
var artalk = require('../../CommentArtalk/src/artalk.js');
var giscus = require('../../CommentGiscus/src/giscus.js');
var twikoo = require('../../CommentTwikoo/src/twikoo.js');
var waline = require('../../CommentWaline/src/waline.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useMediaQuery = require('../../../../composables/useMediaQuery.js');
require('../../../../composables/useZIndex.js');
var namespace = require('./namespace.js');
var BackTop_vue_vue_type_script_setup_true_name_BackTop_lang = require('./BackTop.vue2.js');
var ToComment_vue_vue_type_script_setup_true_name_ToComment_lang = require('./ToComment.vue2.js');
var ThemeColor_vue_vue_type_script_setup_true_name_ThemeColor_lang = require('./ThemeColor.vue2.js');

var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "RightBottomButton" },
  __name: "index",
  setup(__props) {
    const { getTeekConfigRef } = index.useTeekConfig();
    const backTopConfig = getTeekConfigRef("backTop", { enabled: true });
    const toCommentConfig = getTeekConfigRef("toComment", { enabled: true });
    const themeEnhanceConfig = getTeekConfigRef("themeEnhance", { enabled: true });
    const teekConfig = getTeekConfigRef(null, { comment: { provider: "" } });
    const { frontmatter } = vitepress.useData();
    const commentConfig = Vue.computed(() => {
      const comment = frontmatter.value.comment ?? teekConfig.value.comment;
      if (index$1.isBoolean(comment)) return { enabled: comment };
      const getArtalkInstance = Vue.inject(artalk.artalkContext, null);
      const getGiscusInstance = Vue.inject(giscus.giscusContext, null);
      const getTwikooInstance = Vue.inject(twikoo.twikooContext, null);
      const getWalineInstance = Vue.inject(waline.walineContext, null);
      if (getArtalkInstance || getGiscusInstance || getTwikooInstance || getWalineInstance) {
        return { enabled: true };
      }
      return { enabled: true, provider: comment.provider };
    });
    const isMobile = useMediaQuery.useMediaQuery(themeEnhance.mobileMaxWidthMedia);
    const disabledThemeColor = Vue.computed(() => {
      const { enabled = true, themeColor = {}, position = "top" } = themeEnhanceConfig.value;
      const isDisabled = themeColor.disabled ?? themeColor.disabledInMobile;
      if (!enabled) return true;
      if (isDisabled !== void 0) return isDisabled;
      return !isMobile.value && position === "top";
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass([Vue.unref(namespace.ns).b(), Vue.unref(namespace.ns).join("wallpaper-outside"), "flx-column"])
        },
        [
          Vue.renderSlot(_ctx.$slots, "teek-right-bottom-before"),
          Vue.unref(backTopConfig).enabled ? (Vue.openBlock(), Vue.createBlock(BackTop_vue_vue_type_script_setup_true_name_BackTop_lang.default, { key: 0 }, {
            default: Vue.withCtx((scope) => [
              Vue.renderSlot(_ctx.$slots, "teek-back-top", Vue.normalizeProps(Vue.guardReactiveProps(scope)))
            ]),
            _: 3
            /* FORWARDED */
          })) : Vue.createCommentVNode("v-if", true),
          Vue.unref(toCommentConfig).enabled && (commentConfig.value.enabled || commentConfig.value.provider) ? (Vue.openBlock(), Vue.createBlock(ToComment_vue_vue_type_script_setup_true_name_ToComment_lang.default, { key: 1 }, {
            default: Vue.withCtx((scope) => [
              Vue.renderSlot(_ctx.$slots, "teek-to-comment", Vue.normalizeProps(Vue.guardReactiveProps(scope)))
            ]),
            _: 3
            /* FORWARDED */
          })) : Vue.createCommentVNode("v-if", true),
          !disabledThemeColor.value ? (Vue.openBlock(), Vue.createBlock(ThemeColor_vue_vue_type_script_setup_true_name_ThemeColor_lang.default, { key: 2 })) : Vue.createCommentVNode("v-if", true),
          Vue.renderSlot(_ctx.$slots, "teek-right-bottom-after")
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
var useDebounce = require('../../../../composables/useDebounce.js');
var useLocale = require('../../../../composables/useLocale.js');
var useMediaQuery = require('../../../../composables/useMediaQuery.js');
var useStorage = require('../../../../composables/useStorage.js');
require('../../../../composables/useZIndex.js');
var autoWidth = require('../../../../static/icons/theme-enhance/autoWidth.js');
var scale = require('../../../../static/icons/theme-enhance/scale.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_InputSlide_lang = require('../../../common/InputSlide/src/index.vue2.js');
var themeEnhance = require('./themeEnhance.js');
var namespace = require('./namespace.js');
var useAnimated = require('./useAnimated.js');
var BaseTemplate_vue_vue_type_script_setup_true_name_BaseTemplate_lang = require('./components/BaseTemplate.vue2.js');

var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "LayoutPageWidthSlide" },
  __name: "LayoutPageWidthSlide",
  setup(__props) {
    const { getTeekConfigRef } = index.useTeekConfig();
    const themeEnhanceConfig = getTeekConfigRef("themeEnhance", {});
    const { t } = useLocale.useLocale();
    const min = Vue.computed(() => 60 * 100);
    const max = Vue.computed(() => 100 * 100);
    const pageMaxWidth = useStorage.useStorage(
      namespace.pageMaxWidthSlideStorageKey,
      (themeEnhanceConfig.value.layoutSwitch?.defaultPageMaxWidth || 90) * 100
    );
    const layoutMode = useStorage.useStorage(
      namespace.layoutModeStorageKey,
      themeEnhanceConfig.value.layoutSwitch?.defaultMode || themeEnhance.LayoutMode.Original
    );
    const { start: startAnimated } = useAnimated.useAnimated();
    const updatePageMaxWidth = (val) => {
      if (!index$1.isClient) return;
      if (!themeEnhanceConfig.value.layoutSwitch?.disableAnimation) startAnimated();
      document.body.style.setProperty(namespace.pageMaxWidthVar, `${Math.ceil(val / 100)}%`);
    };
    const isMobile = useMediaQuery.useMediaQuery(themeEnhance.mobileMaxWidthMedia);
    const shouldActivateMaxWidth = useMediaQuery.useMediaQuery(themeEnhance.activateMaxWidthSlideMedia);
    Vue.watch(shouldActivateMaxWidth, () => {
      updatePageMaxWidth(pageMaxWidth.value);
    });
    const update = useDebounce.useDebounce(updatePageMaxWidth, 1e3);
    Vue.watch(pageMaxWidth, update);
    const format = (val) => `${Math.ceil(val / 100)}%`;
    const tips = [
      {
        title: t("tk.themeEnhance.pageLayoutMaxWidth.helpTipTitle"),
        icon: scale.default,
        content: t("tk.themeEnhance.pageLayoutMaxWidth.helpTipContent")
      }
    ];
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(Vue.Transition, {
        name: Vue.unref(namespace.transitionName),
        persisted: ""
      }, {
        default: Vue.withCtx(() => [
          Vue.withDirectives(Vue.createVNode(BaseTemplate_vue_vue_type_script_setup_true_name_BaseTemplate_lang.default, {
            icon: Vue.unref(autoWidth.default),
            title: Vue.unref(t)("tk.themeEnhance.pageLayoutMaxWidth.title"),
            helper: !Vue.unref(themeEnhanceConfig).layoutSwitch?.disablePageMaxWidthHelp,
            "helper-desc": Vue.unref(t)("tk.themeEnhance.pageLayoutMaxWidth.helpDesc"),
            tips,
            disabled: Vue.unref(isMobile)
          }, {
            default: Vue.withCtx(() => [
              Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_InputSlide_lang.default), {
                modelValue: Vue.unref(pageMaxWidth),
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => Vue.isRef(pageMaxWidth) ? pageMaxWidth.value = $event : null),
                disabled: Vue.unref(isMobile),
                min: min.value,
                max: max.value,
                format,
                class: Vue.normalizeClass(Vue.unref(namespace.ns).e("slide")),
                "aria-label": Vue.unref(t)("tk.themeEnhance.pageLayoutMaxWidth.helperTipTitle")
              }, null, 8, ["modelValue", "disabled", "min", "max", "class", "aria-label"])
            ]),
            _: 1
            /* STABLE */
          }, 8, ["icon", "title", "helper", "helper-desc", "disabled"]), [
            [Vue.vShow, Vue.unref(layoutMode) === Vue.unref(themeEnhance.LayoutMode).SidebarWidthAdjustableOnly || Vue.unref(layoutMode) === Vue.unref(themeEnhance.LayoutMode).BothWidthAdjustable]
          ])
        ]),
        _: 1
        /* STABLE */
      }, 8, ["name"]);
    };
  }
});

exports.default = _sfc_main;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('vitepress-theme-teek/theme-chalk/tk-copy-banner.css');
require('../../../../composables/useZIndex.js');
var externalLink = require('../../../../static/icons/externalLink.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');

const _hoisted_1 = ["name", "href", "title", "target", "aria-label", "aria-describedby"];
const _hoisted_2 = { class: "sle" };
var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "FooterGroup" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("footer-group");
    const { getTeekConfigRef } = index.useTeekConfig();
    const footerGroupConfig = getTeekConfigRef("footerGroup", []);
    return (_ctx, _cache) => {
      return Vue.unref(footerGroupConfig).length ? (Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          key: 0,
          class: Vue.normalizeClass(Vue.unref(ns).b())
        },
        [
          (Vue.openBlock(true), Vue.createElementBlock(
            Vue.Fragment,
            null,
            Vue.renderList(Vue.unref(footerGroupConfig), (group, index) => {
              return Vue.openBlock(), Vue.createElementBlock("div", {
                key: (group.title || "") + index
              }, [
                Vue.createElementVNode(
                  "div",
                  {
                    class: Vue.normalizeClass([Vue.unref(ns).e("title"), "flx-center"])
                  },
                  [
                    group.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                      key: 0,
                      icon: group.icon,
                      style: { "margin-right": "4px" },
                      "aria-hidden": "true"
                    }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true),
                    Vue.createTextVNode(
                      " " + Vue.toDisplayString(group.title),
                      1
                      /* TEXT */
                    )
                  ],
                  2
                  /* CLASS */
                ),
                Vue.createElementVNode("ul", null, [
                  (Vue.openBlock(true), Vue.createElementBlock(
                    Vue.Fragment,
                    null,
                    Vue.renderList(group.links || [], (link, idx) => {
                      return Vue.openBlock(), Vue.createElementBlock(
                        "li",
                        {
                          key: (link.name || "") + idx,
                          class: Vue.normalizeClass([Vue.unref(ns).e("link")])
                        },
                        [
                          link.icon ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                            key: 0,
                            icon: link.icon,
                            style: { "margin-right": "4px" },
                            "aria-hidden": "true"
                          }, null, 8, ["icon"])) : Vue.createCommentVNode("v-if", true),
                          Vue.createElementVNode("a", {
                            name: link.name,
                            href: link.link,
                            title: link.name,
                            target: Vue.unref(index$1.isExternal)(link.link || "") ? "_blank" : "_self",
                            class: "hover-color",
                            "aria-label": link.name,
                            rel: "noopener noreferrer",
                            "aria-describedby": link.name
                          }, [
                            Vue.createElementVNode(
                              "span",
                              _hoisted_2,
                              Vue.toDisplayString(link.name),
                              1
                              /* TEXT */
                            ),
                            Vue.unref(index$1.isExternal)(link.link || "") ? (Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
                              key: 0,
                              icon: Vue.unref(externalLink.default),
                              class: Vue.normalizeClass(Vue.unref(ns).e("link__external-icon")),
                              "aria-hidden": "true"
                            }, null, 8, ["icon", "class"])) : Vue.createCommentVNode("v-if", true)
                          ], 8, _hoisted_1)
                        ],
                        2
                        /* CLASS */
                      );
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ])
              ]);
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ],
        2
        /* CLASS */
      )) : Vue.createCommentVNode("v-if", true);
    };
  }
});

exports.default = _sfc_main;

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var questionFilled = require('../../../../../static/icons/questionFilled.js');
var index_vue_vue_type_script_setup_true_name_Icon_lang = require('../../../../common/Icon/src/index.vue2.js');
require('@iconify/vue');
var index_vue_vue_type_script_setup_true_name_Popover_lang = require('../../../../common/Popover/src/index.vue2.js');
var namespace = require('../namespace.js');

var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "Helper" },
  __name: "Helper",
  props: /* @__PURE__ */ Vue.mergeModels({
    triggerEl: {}
  }, {
    "modelValue": { default: false },
    "modelModifiers": {}
  }),
  emits: ["update:modelValue"],
  setup(__props) {
    const visible = Vue.useModel(__props, "modelValue");
    const popoverVisible = Vue.ref(visible.value);
    Vue.watch(popoverVisible, (newVal) => {
      visible.value = newVal;
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(Vue.unref(index_vue_vue_type_script_setup_true_name_Popover_lang.default), {
        class: Vue.normalizeClass(Vue.unref(namespace.ns).e("helper")),
        modelValue: popoverVisible.value,
        "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => popoverVisible.value = $event),
        "trigger-el": __props.triggerEl,
        placement: "left-start"
      }, {
        reference: Vue.withCtx(() => [
          Vue.createVNode(Vue.unref(index_vue_vue_type_script_setup_true_name_Icon_lang.default), {
            icon: Vue.unref(questionFilled.default),
            size: 16
          }, null, 8, ["icon"])
        ]),
        default: Vue.withCtx(() => [
          Vue.createElementVNode(
            "div",
            {
              class: Vue.normalizeClass(Vue.unref(namespace.ns).e("helper__popup"))
            },
            [
              Vue.renderSlot(_ctx.$slots, "default")
            ],
            2
            /* CLASS */
          )
        ]),
        _: 3
        /* FORWARDED */
      }, 8, ["class", "modelValue", "trigger-el"]);
    };
  }
});

exports.default = _sfc_main;

import { InjectionKey, Ref, ComputedRef } from 'vue';
import { Language } from '../locale';
export type TranslatorOption = Record<string, string | number>;
export declare const localeContextKey: InjectionKey<Ref<Language | undefined>>;
/**
 * 国际化功能
 *
 * @param localeOverrides 自定义语言包
 */
export declare const useLocale: (localeOverride?: Ref<Language | undefined>) => {
    lang: ComputedRef<string>;
    locale: ComputedRef<Language | {
        lang: string;
        tk: {
            archives: {
                label: string;
                title: string;
                totalCount: string;
                year: string;
                month: string;
                count: string;
                notFound: string;
            };
            articleAnalyze: {
                label: string;
                wordCount: string;
                readingTime: string;
                pageView: string;
            };
            articleAppreciation: {
                label: string;
                contentLabel: string;
            };
            articleBreadcrumb: {
                label: string;
                home: string;
            };
            breadcrumb: {
                label: string;
            };
            articleInfo: {
                label: string;
                author: string;
                createTime: string;
                updateTime: string;
                category: string;
                tag: string;
            };
            articleOverview: {
                label: string;
                overview: string;
                category: string;
                name: string;
                title: string;
                date: string;
                wordCount: string;
                readingTime: string;
            };
            articleShare: {
                label: string;
                text: string;
                copiedText: string;
            };
            articleTitle: {
                label: string;
            };
            articleUpdate: {
                label: string;
            };
            catalogue: {
                label: string;
                title: string;
            };
            demoCode: {
                playground: string;
                github: string;
                copy: string;
                collapseSource: string;
                expandSource: string;
                notSupport: string;
                copySuccess: string;
                copyFail: string;
            };
            footerInfo: {
                label: string;
                socialLabel: string;
                infoLabel: string;
            };
            home: {
                label: string;
                postLabel: string;
                cardLabel: string;
            };
            homeBanner: {
                label: string;
                wavesLabel: string;
                bgImgLabel: string;
                maskLabel: string;
                bgPureLabel: string;
                contentLabel: string;
                titleLabel: string;
                descLabel: string;
                descSwitchLabel: string;
                descTypedLabel: string;
                featureLabel: string;
            };
            homePost: {
                label: string;
                emptyLabel: string;
                pageLabel: string;
                moreLabel: string;
                pin: string;
                pinLabel: string;
                excerptLabel: string;
                infoLabel: string;
                coverImgLabel: string;
            };
            pageCard: {
                label: string;
                prev: string;
                next: string;
            };
            categoryCard: {
                pageTitle: string;
                homeTitle: string;
                label: string;
                emptyLabel: string;
                listLabel: string;
                moreLabel: string;
            };
            docAnalysisCard: {
                title: string;
                totalPosts: string;
                weekAddNum: string;
                monthAddNum: string;
                runtime: string;
                totalWordCount: string;
                lastActiveTime: string;
                viewCount: string;
                visitCount: string;
                fileUnit: string;
                runtimeLess: string;
                runtimeUnit: string;
                wordCountUnit: string;
                viewCountUnit: string;
                visitCountUnit: string;
                label: string;
            };
            friendLinkCard: {
                title: string;
                emptyLabel: string;
                label: string;
                listLabel: string;
            };
            myCard: {
                label: string;
                avatarAlt: string;
                avatarTitle: string;
                socialLabel: string;
                bloggerLabel: string;
            };
            tagCard: {
                pageTitle: string;
                homeTitle: string;
                label: string;
                emptyLabel: string;
                listLabel: string;
                moreLabel: string;
            };
            topArticleCard: {
                title: string;
                label: string;
                emptyLabel: string;
                listLabel: string;
            };
            image: {
                error: string;
            };
            notice: {
                label: string;
                title: string;
                openLabel: string;
                closeLabel: string;
                headLabel: string;
                contentLabel: string;
            };
            pagination: {
                goto: string;
                pagesize: string;
                total: string;
                pageClassifier: string;
                page: string;
                prev: string;
                next: string;
                currentPage: string;
                prevPages: string;
                nextPages: string;
            };
            rightBottomButton: {
                backTopTitle: string;
                themeSizeTitle: string;
                themeStyleTitle: string;
                toComment: string;
            };
            themeEnhance: {
                title: string;
                layoutSwitch: {
                    title: string;
                    helpDesc: string;
                    fullWidthTipTitle: string;
                    fullWidthHelpTipContent: string;
                    sidebarWidthAdjustableOnlyTipTitle: string;
                    sidebarWidthAdjustableOnlyHelpTipContent: string;
                    bothWidthAdjustableTipTitle: string;
                    bothWidthAdjustableHelpTipContent: string;
                    originalWidthTipTitle: string;
                    originalWidthHelpTipContent: string;
                };
                docLayoutMaxWidth: {
                    title: string;
                    helpDesc: string;
                    helpTipTitle: string;
                    helpTipContent: string;
                };
                pageLayoutMaxWidth: {
                    title: string;
                    helpDesc: string;
                    helpTipTitle: string;
                    helpTipContent: string;
                };
                themeColor: {
                    title: string;
                    speedLabel: string;
                    vpLabel: string;
                    epLabel: string;
                    vpTip: string;
                    epTip: string;
                    defaultLabel: string;
                    blueLabel: string;
                    greenLabel: string;
                    yellowLabel: string;
                    redLabel: string;
                    helpDesc: string;
                    vpHelpTipTitle: string;
                    vpHelpTipContent: string;
                    epHelpTipTitle: string;
                    epHelpTipContent: string;
                };
                spotlight: {
                    title: string;
                    helpDesc: string;
                    onTipTitle: string;
                    onHelpTipContent: string;
                    offTipTitle: string;
                    offHelpTipContent: string;
                };
                spotlightStyles: {
                    title: string;
                    helpDesc: string;
                    asideTipTitle: string;
                    asideHelpTipContent: string;
                    underTipTitle: string;
                    underHelpTipContent: string;
                };
            };
            login: {
                label: string;
                reset: string;
                login: string;
                loginSuccess: string;
                loginError: string;
                loginInfoNonNull: string;
                usernamePlaceholder: string;
                passwordPlaceholder: string;
                verifyCodePlaceholder: string;
                verifyCodeNonNull: string;
                verifyCodeError: string;
            };
            riskLink: {
                label: string;
                title: string;
                linkIllegal: string;
                confirmButtonText: string;
            };
            sidebarTrigger: {
                label: string;
            };
        };
    }>;
    t: (path: string, option?: TranslatorOption) => string;
    translate: (path: string, option: TranslatorOption | undefined, locale: Language) => string;
};

import { defineComponent, computed, createElementBlock, createCommentVNode, unref, openBlock, normalizeClass, createVNode, withCtx, createElementVNode, Fragment, renderList, createBlock, resolveDynamicComponent, createTextVNode, toDisplayString } from 'vue';
import { useData, withBase } from 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import houseIcon from '../../../../static/icons/house.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/Breadcrumb/src/Breadcrumb.vue2.mjs';
import _sfc_main$2 from '../../../common/Breadcrumb/src/BreadcrumbItem.vue2.mjs';
import _sfc_main$3 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["href", "title", "aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ArticleBreadcrumb" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("article-breadcrumb");
    const { t } = useLocale();
    const { getTeekConfigRef } = useTeekConfig();
    const { localeIndex, theme, page } = useData();
    const breadcrumb = getTeekConfigRef("breadcrumb", {
      enabled: true,
      showCurrentName: false,
      separator: "/",
      homeLabel: t("tk.articleBreadcrumb.home")
    });
    const relativePathArr = computed(() => page.value.filePath.split("/") || []);
    const breadcrumbList = computed(() => {
      const classifyList = [];
      const relativePathArrConst = relativePathArr.value;
      relativePathArrConst.forEach((item, index) => {
        const fileName = item.replace(/^\d+\./, "").split(".")?.[0] || "";
        if ((index !== relativePathArrConst.length - 1 || breadcrumb.value.showCurrentName) && fileName !== localeIndex.value) {
          classifyList.push({
            fileName,
            url: theme.value.catalogues?.inv[item]?.url || ""
          });
        }
      });
      return classifyList;
    });
    return (_ctx, _cache) => {
      return unref(breadcrumb)?.enabled ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(ns).b()),
        role: "navigation",
        "aria-label": unref(t)("tk.articleBreadcrumb.label")
      }, [
        createVNode(unref(_sfc_main$1), {
          separator: unref(breadcrumb).separator
        }, {
          default: withCtx(() => [
            createVNode(unref(_sfc_main$2), null, {
              default: withCtx(() => [
                createElementVNode("a", {
                  href: unref(withBase)("/"),
                  title: unref(breadcrumb).homeLabel,
                  class: "home hover-color",
                  "aria-label": unref(breadcrumb).homeLabel
                }, [
                  createVNode(unref(_sfc_main$3), {
                    icon: unref(houseIcon),
                    "aria-hidden": "true"
                  }, null, 8, ["icon"])
                ], 8, _hoisted_2)
              ]),
              _: 1
              /* STABLE */
            }),
            (openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(breadcrumbList.value, (item, index) => {
                return openBlock(), createBlock(
                  unref(_sfc_main$2),
                  { key: index },
                  {
                    default: withCtx(() => [
                      (openBlock(), createBlock(resolveDynamicComponent(item.url ? "a" : "span"), {
                        href: item.url && unref(withBase)(`/${item.url}`),
                        title: item.fileName,
                        class: normalizeClass([item.url ? "hover-color" : ""]),
                        "aria-label": item.fileName
                      }, {
                        default: withCtx(() => [
                          createTextVNode(
                            toDisplayString(item.fileName),
                            1
                            /* TEXT */
                          )
                        ]),
                        _: 2
                        /* DYNAMIC */
                      }, 1032, ["href", "title", "class", "aria-label"]))
                    ]),
                    _: 2
                    /* DYNAMIC */
                  },
                  1024
                  /* DYNAMIC_SLOTS */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          _: 1
          /* STABLE */
        }, 8, ["separator"])
      ], 10, _hoisted_1)) : createCommentVNode("v-if", true);
    };
  }
});

export { _sfc_main as default };

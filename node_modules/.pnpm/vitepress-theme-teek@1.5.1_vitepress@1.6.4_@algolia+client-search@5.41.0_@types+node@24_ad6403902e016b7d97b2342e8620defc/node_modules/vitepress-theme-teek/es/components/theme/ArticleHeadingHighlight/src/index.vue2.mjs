import { defineComponent, watch, nextTick } from 'vue';
import { useRoute } from 'vitepress';
import { isClient } from '../../../../helper/dist/index.mjs';
import { useEventListener } from '../../../../composables/useEventListener.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import '../../../../composables/useZIndex.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "index",
  setup(__props) {
    const ns = useNamespace("article-heading-highlight");
    const handleHighlight = () => {
      if (!isClient || !window.location.hash) return;
      const targetedHashId = decodeURIComponent(window.location.hash);
      if (!targetedHashId) return;
      let elem;
      try {
        elem = document.querySelector(targetedHashId);
      } catch (e) {
        return console.error(e);
      }
      if (!elem) return;
      if (!elem.classList.contains(ns.b())) {
        elem.classList.add(ns.b());
      }
      elem.classList.remove(ns.b());
      setTimeout(() => {
        if (elem) elem.classList.add(ns.b());
      }, 10);
    };
    const route = useRoute();
    watch(route, async () => {
      await nextTick();
      handleHighlight();
    });
    useEventListener(() => window, "hashchange", handleHighlight);
    return (_ctx, _cache) => {
      return null;
    };
  }
});

export { _sfc_main as default };

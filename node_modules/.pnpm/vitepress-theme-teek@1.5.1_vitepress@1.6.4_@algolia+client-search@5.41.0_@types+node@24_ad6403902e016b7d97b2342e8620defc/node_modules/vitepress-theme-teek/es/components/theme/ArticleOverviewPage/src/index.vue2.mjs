import { defineComponent, computed, resolveComponent, createBlock, openBlock, unref, normalizeClass, withCtx, createElementBlock, createCommentVNode, createVNode, createTextVNode, createElementVNode, toDisplayString, Fragment, renderList, resolveDynamicComponent } from 'vue';
import { useData, withBase } from 'vitepress';
import { formatDate } from '../../../../helper/dist/index.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import { usePosts, useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/ArticlePage/src/index.vue2.mjs';
import { createDynamicComponent } from '../../ArticleTitle/src/compile.mjs';

const _hoisted_1 = { key: 0 };
const _hoisted_2 = ["href", "aria-label"];
const _hoisted_3 = ["id"];
const _hoisted_4 = ["href", "aria-label"];
const _hoisted_5 = ["href"];
const _hoisted_6 = { "aria-describedby": `overview-title` };
const _hoisted_7 = ["href", "aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ArticleOverviewPage" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("article-overview");
    const { t } = useLocale();
    const posts = usePosts();
    const { localeIndex, site, theme, frontmatter } = useData();
    const { getTeekConfigRef } = useTeekConfig();
    const categoryConfig = getTeekConfigRef("category", {
      path: "/categories"
    });
    const categories = computed(() => posts.value.groupPosts.categories);
    const eachFileWords = computed(() => theme.value.docAnalysisInfo?.eachFileWords || []);
    const categoriesPageLink = computed(() => {
      const localeIndexConst = localeIndex.value;
      const localeName = localeIndexConst !== "root" ? `/${localeIndexConst}` : "";
      return `${localeName}${categoryConfig.value.path}${site.value.cleanUrls ? "" : ".html"}`;
    });
    const getFileWords = (url) => {
      return eachFileWords.value.filter((item) => {
        const path = "/" + item.fileInfo.relativePath.replace(".md", "");
        return [path, `${path}.html`].includes(url);
      })[0];
    };
    const enhancedCategories = computed(() => {
      return Object.entries(categories.value).map(([key, items]) => ({
        name: key,
        data: items.map((item) => {
          const wordsInfo = getFileWords(item.url);
          return {
            ...item,
            wordCount: wordsInfo?.wordCount || "-",
            readingTime: wordsInfo?.readingTime || "-"
          };
        }) || []
      })).sort(
        (a, b) => new Date(b.data[b.data.length - 1].date).getTime() - new Date(a.data[a.data.length - 1].date).getTime()
      );
    });
    const formatPublishDate = (date) => {
      const publishDateFormat = frontmatter.value.publishDateFormat;
      if (!publishDateFormat) return date;
      return formatDate(date || /* @__PURE__ */ new Date(), publishDateFormat);
    };
    return (_ctx, _cache) => {
      const _component_Content = resolveComponent("Content");
      return openBlock(), createBlock(unref(_sfc_main$1), {
        doc: "",
        aside: "",
        class: normalizeClass(unref(ns).b())
      }, {
        default: withCtx(() => [
          unref(frontmatter).title ? (openBlock(), createElementBlock("h1", _hoisted_1, [
            createTextVNode(
              toDisplayString(unref(frontmatter).title) + " ",
              1
              /* TEXT */
            ),
            createElementVNode("a", {
              class: "header-anchor",
              href: `#${unref(frontmatter).title}`,
              "aria-label": `Permalink to '${unref(frontmatter).title}'`
            }, null, 8, _hoisted_2)
          ])) : createCommentVNode("v-if", true),
          createVNode(_component_Content),
          (openBlock(true), createElementBlock(
            Fragment,
            null,
            renderList(enhancedCategories.value, (item) => {
              return openBlock(), createElementBlock(
                Fragment,
                {
                  key: item.name
                },
                [
                  createElementVNode("h2", {
                    id: `${item.name}-${unref(t)("tk.articleOverview.overview")}`
                  }, [
                    createTextVNode(
                      toDisplayString(item.name) + " " + toDisplayString(unref(t)("tk.articleOverview.overview")) + " ",
                      1
                      /* TEXT */
                    ),
                    createElementVNode("a", {
                      class: "header-anchor",
                      href: `#${item.name}-${unref(t)("tk.articleOverview.overview")}`,
                      "aria-label": `Permalink to '${item.name}-${unref(t)("tk.articleOverview.overview")}'`
                    }, null, 8, _hoisted_4)
                  ], 8, _hoisted_3),
                  createElementVNode("a", {
                    href: `${categoriesPageLink.value}?category=${item.name}`,
                    "aria-describedby": `overview-title`
                  }, toDisplayString(item.name) + " " + toDisplayString(unref(t)("tk.articleOverview.category")), 9, _hoisted_5),
                  createElementVNode("table", _hoisted_6, [
                    createElementVNode("thead", null, [
                      createElementVNode("tr", null, [
                        createElementVNode(
                          "th",
                          null,
                          toDisplayString(unref(t)("tk.articleOverview.name")),
                          1
                          /* TEXT */
                        ),
                        createElementVNode(
                          "th",
                          null,
                          toDisplayString(unref(t)("tk.articleOverview.title")),
                          1
                          /* TEXT */
                        ),
                        createElementVNode(
                          "th",
                          null,
                          toDisplayString(unref(t)("tk.articleOverview.date")),
                          1
                          /* TEXT */
                        ),
                        createElementVNode(
                          "th",
                          null,
                          toDisplayString(unref(t)("tk.articleOverview.wordCount")),
                          1
                          /* TEXT */
                        ),
                        createElementVNode(
                          "th",
                          null,
                          toDisplayString(unref(t)("tk.articleOverview.readingTime")),
                          1
                          /* TEXT */
                        )
                      ])
                    ]),
                    createElementVNode("tbody", null, [
                      (openBlock(true), createElementBlock(
                        Fragment,
                        null,
                        renderList(item.data, (data) => {
                          return openBlock(), createElementBlock("tr", {
                            key: data.url
                          }, [
                            createElementVNode(
                              "td",
                              null,
                              toDisplayString(item.name),
                              1
                              /* TEXT */
                            ),
                            createElementVNode("td", null, [
                              createElementVNode("a", {
                                href: data.url && unref(withBase)(data.url),
                                "aria-label": data.title
                              }, [
                                data.title ? (openBlock(), createBlock(resolveDynamicComponent(unref(createDynamicComponent)(data.title)), { key: 0 })) : createCommentVNode("v-if", true)
                              ], 8, _hoisted_7)
                            ]),
                            createElementVNode(
                              "td",
                              null,
                              toDisplayString(formatPublishDate(data.date)),
                              1
                              /* TEXT */
                            ),
                            createElementVNode(
                              "td",
                              null,
                              toDisplayString(data.wordCount),
                              1
                              /* TEXT */
                            ),
                            createElementVNode(
                              "td",
                              null,
                              toDisplayString(data.readingTime),
                              1
                              /* TEXT */
                            )
                          ]);
                        }),
                        128
                        /* KEYED_FRAGMENT */
                      ))
                    ])
                  ])
                ],
                64
                /* STABLE_FRAGMENT */
              );
            }),
            128
            /* KEYED_FRAGMENT */
          ))
        ]),
        _: 1
        /* STABLE */
      }, 8, ["class"]);
    };
  }
});

export { _sfc_main as default };

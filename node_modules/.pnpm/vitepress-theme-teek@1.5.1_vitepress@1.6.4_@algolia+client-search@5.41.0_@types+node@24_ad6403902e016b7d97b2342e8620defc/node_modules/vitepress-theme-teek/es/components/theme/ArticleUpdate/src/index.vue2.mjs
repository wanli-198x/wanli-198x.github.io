import { defineComponent, computed, withDirectives, createElementBlock, openBlock, normalizeClass, unref, createElementVNode, createVNode, toDisplayString, Fragment, renderList, createCommentVNode, vShow } from 'vue';
import { useRoute, useData, withBase } from 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import editPenIcon from '../../../../static/icons/editPen.mjs';
import { usePosts, useTeekConfig, usePagePath } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';
import _sfc_main$2 from '../../ArticleTitle/src/index.vue2.mjs';

const _hoisted_1 = ["href", "aria-label"];
const _hoisted_2 = { key: 1 };
const _hoisted_3 = ["href", "aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "ArticleUpdate" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("article-update");
    const { t } = useLocale();
    const posts = usePosts();
    const route = useRoute();
    const { frontmatter } = useData();
    const { getTeekConfigRef } = useTeekConfig();
    const { archivesPath } = usePagePath();
    const articleConfig = getTeekConfigRef("articleUpdate", {
      limit: 3
    });
    const updatePosts = computed(() => {
      const path = "/" + route.data.filePath.replace(".md", "");
      return [
        ...posts.value.sortPostsByDate.filter((item) => ![route.path, path, `${path}.html`].includes(item.url)).slice(0, articleConfig.value.limit),
        { title: "\u66F4\u591A\u6587\u7AE0 >", url: archivesPath.value, frontmatter: {}, date: "" }
      ];
    });
    return (_ctx, _cache) => {
      return withDirectives((openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass(unref(ns).b())
        },
        [
          createElementVNode(
            "div",
            {
              class: normalizeClass([unref(ns).e("title"), "flx-align-center"])
            },
            [
              createVNode(unref(_sfc_main$1), {
                icon: unref(editPenIcon),
                class: "edit-icon",
                "aria-hidden": "true"
              }, null, 8, ["icon"]),
              unref(archivesPath) ? (openBlock(), createElementBlock("a", {
                key: 0,
                href: unref(withBase)(unref(archivesPath)),
                class: "hover-color",
                "aria-label": unref(t)("tk.articleUpdate.label")
              }, toDisplayString(unref(t)("tk.articleUpdate.label")), 9, _hoisted_1)) : (openBlock(), createElementBlock(
                "span",
                _hoisted_2,
                toDisplayString(unref(t)("tk.articleUpdate.label")),
                1
                /* TEXT */
              ))
            ],
            2
            /* CLASS */
          ),
          createElementVNode("ul", null, [
            (openBlock(true), createElementBlock(
              Fragment,
              null,
              renderList(updatePosts.value, (item, index) => {
                return openBlock(), createElementBlock("li", {
                  key: item.url,
                  class: "flx-center"
                }, [
                  createElementVNode(
                    "span",
                    {
                      class: normalizeClass(unref(ns).m("num")),
                      "aria-hidden": "true"
                    },
                    toDisplayString(index !== updatePosts.value.length - 1 ? (index + 1).toString().padStart(2, "0") : ""),
                    3
                    /* TEXT, CLASS */
                  ),
                  createElementVNode(
                    "div",
                    {
                      class: normalizeClass(unref(ns).e("content"))
                    },
                    [
                      item.url ? (openBlock(), createElementBlock("a", {
                        key: 0,
                        href: unref(withBase)(item.url),
                        class: "flx-1 hover-color sle",
                        "aria-label": item.title
                      }, [
                        createVNode(unref(_sfc_main$2), {
                          post: item,
                          "title-tag-props": { position: "right", size: "small" }
                        }, null, 8, ["post"])
                      ], 8, _hoisted_3)) : createCommentVNode("v-if", true),
                      item.date ? (openBlock(), createElementBlock(
                        "span",
                        {
                          key: 1,
                          class: normalizeClass(unref(ns).em("content", "date"))
                        },
                        toDisplayString(item.date),
                        3
                        /* TEXT, CLASS */
                      )) : createCommentVNode("v-if", true)
                    ],
                    2
                    /* CLASS */
                  )
                ]);
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ])
        ],
        2
        /* CLASS */
      )), [
        [vShow, unref(frontmatter).article !== false]
      ]);
    };
  }
});

export { _sfc_main as default };

import { defineComponent, ref, provide, createElementBlock, openBlock, unref, normalizeClass, withDirectives, createCommentVNode, createElementVNode, createBlock, createVNode, createSlots, renderList, withCtx, renderSlot, normalizeProps, guardReactiveProps, vShow } from 'vue';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import { usePageState, useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$4 from '../../HomeFullscreenWallpaper/src/index.vue2.mjs';
import _sfc_main$2 from '../../HomePostList/src/index.vue2.mjs';
import _sfc_main$1 from '../../HomeBanner/src/index.vue2.mjs';
import _sfc_main$3 from '../../HomeCardList/src/index.vue2.mjs';
import { postDataUpdateSymbol } from './home.mjs';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = { key: 0 };
const _hoisted_3 = ["aria-label"];
const _hoisted_4 = ["aria-label"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "Home" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("home");
    const { t } = useLocale();
    const { isHomePage } = usePageState();
    const { getTeekConfigRef } = useTeekConfig();
    const teekConfig = getTeekConfigRef(null, {
      teekHome: true,
      homeCardListPosition: "right",
      banner: {},
      wallpaper: {},
      bodyBgImg: {}
    });
    const homePostListInstance = ref(null);
    provide(postDataUpdateSymbol, () => homePostListInstance.value?.updateData());
    const isPaging = ref(false);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(unref(ns).b()),
        role: "main",
        "aria-label": unref(t)("tk.home.label")
      }, [
        unref(isHomePage) && (unref(teekConfig).banner.enabled ?? true) ? withDirectives((openBlock(), createElementBlock(
          "div",
          _hoisted_2,
          [
            createVNode(unref(_sfc_main$1), { disabled: isPaging.value }, createSlots({
              _: 2
              /* DYNAMIC */
            }, [
              renderList(_ctx.$slots, (_, name) => {
                return {
                  name,
                  fn: withCtx((scope) => [
                    renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(scope)))
                  ])
                };
              })
            ]), 1032, ["disabled"])
          ],
          512
          /* NEED_PATCH */
        )), [
          [vShow, !isPaging.value]
        ]) : createCommentVNode("v-if", true),
        createElementVNode(
          "div",
          {
            class: normalizeClass([unref(ns).e("content"), unref(ns).join("wallpaper-outside"), "flx-start-justify-center"])
          },
          [
            createElementVNode("div", {
              class: normalizeClass(unref(ns).e("content__post")),
              "aria-label": unref(t)("tk.home.postLabel")
            }, [
              renderSlot(_ctx.$slots, "teek-home-post-before"),
              createVNode(unref(_sfc_main$2), {
                modelValue: isPaging.value,
                "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isPaging.value = $event),
                ref_key: "homePostListInstance",
                ref: homePostListInstance
              }, createSlots({
                _: 2
                /* DYNAMIC */
              }, [
                renderList(_ctx.$slots, (_, name) => {
                  return {
                    name,
                    fn: withCtx((scope) => [
                      renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(scope)))
                    ])
                  };
                })
              ]), 1032, ["modelValue"]),
              renderSlot(_ctx.$slots, "teek-home-post-after")
            ], 10, _hoisted_3),
            unref(teekConfig).homeCardListPosition ? (openBlock(), createElementBlock("div", {
              key: 0,
              class: normalizeClass([unref(ns).e("content__info"), unref(teekConfig).homeCardListPosition === "left" ? unref(ns).is("left") : unref(ns).is("right")]),
              "aria-label": unref(t)("tk.home.cardLabel")
            }, [
              createVNode(
                unref(_sfc_main$3),
                null,
                createSlots({
                  _: 2
                  /* DYNAMIC */
                }, [
                  renderList(_ctx.$slots, (_, name) => {
                    return {
                      name,
                      fn: withCtx((scope) => [
                        renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(scope)))
                      ])
                    };
                  })
                ]),
                1024
                /* DYNAMIC_SLOTS */
              )
            ], 10, _hoisted_4)) : createCommentVNode("v-if", true)
          ],
          2
          /* CLASS */
        ),
        unref(teekConfig).wallpaper.enabled && (unref(teekConfig).banner.bgStyle === "fullImg" || unref(teekConfig).bodyBgImg.imgSrc) ? (openBlock(), createBlock(unref(_sfc_main$4), { key: 1 })) : createCommentVNode("v-if", true)
      ], 10, _hoisted_1);
    };
  }
});

export { _sfc_main as default };

import { defineComponent, watch, nextTick } from 'vue';
import { isClient } from '../../../../helper/dist/index.mjs';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "index",
  setup(__props) {
    const ns = useNamespace();
    const { getTeekConfigRef } = useTeekConfig();
    const themeConfig = getTeekConfigRef(null, {
      vpHome: true,
      pageStyle: "default"
    });
    const initPageStyle = async () => {
      if (!isClient) return;
      await nextTick();
      const tkLayoutDom = document.querySelector(`.${ns.join("layout")}`);
      ["default", "card", "card-nav", "segment", "segment-nav"].forEach(
        (item) => tkLayoutDom?.classList.remove(ns.join(item))
      );
      tkLayoutDom?.classList.add(ns.join(themeConfig.value.pageStyle));
    };
    watch(() => themeConfig.value.pageStyle, initPageStyle, { immediate: true });
    watch(() => themeConfig.value.vpHome, initPageStyle);
    return (_ctx, _cache) => {
      return null;
    };
  }
});

export { _sfc_main as default };

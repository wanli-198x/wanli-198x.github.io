import { defineComponent, ref, onMounted, createElementBlock, openBlock, normalizeClass, unref, createElementVNode, createCommentVNode, toDisplayString } from 'vue';
import { useData } from 'vitepress';
import { isValidURL } from '../../../../helper/dist/index.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';

const _hoisted_1 = ["src"];
const _hoisted_2 = { key: 1 };
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "RiskLinkPage" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("risk-link");
    const { t } = useLocale();
    const { frontmatter } = useData();
    const targetLink = ref("");
    onMounted(() => {
      const { searchParams } = new URL(window.location.href);
      const target = searchParams.get("target");
      if (target && isValidURL(target)) {
        targetLink.value = target;
      }
    });
    const confirmRedirect = () => {
      window.location.href = targetLink.value;
    };
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass([unref(ns).b(), unref(ns).join("center"), "flx-space-y-20"])
        },
        [
          createElementVNode(
            "div",
            {
              class: normalizeClass([unref(ns).e("header"), "flx-align-center"])
            },
            [
              unref(frontmatter).logo ? (openBlock(), createElementBlock("img", {
                key: 0,
                src: unref(frontmatter).logo,
                alt: "logo"
              }, null, 8, _hoisted_1)) : createCommentVNode("v-if", true),
              targetLink.value ? (openBlock(), createElementBlock(
                "p",
                {
                  key: 1,
                  class: normalizeClass(unref(ns).e("title"))
                },
                toDisplayString(unref(frontmatter).desc ? unref(frontmatter).desc : unref(t)("tk.riskLink.title", { name: unref(frontmatter).name || "VitePress Theme Teek" })),
                3
                /* TEXT, CLASS */
              )) : (openBlock(), createElementBlock(
                "p",
                {
                  key: 2,
                  class: normalizeClass(unref(ns).e("title"))
                },
                toDisplayString(unref(frontmatter).linkIllegal ? unref(frontmatter).linkIllegal : unref(t)("tk.riskLink.linkIllegal")),
                3
                /* TEXT, CLASS */
              ))
            ],
            2
            /* CLASS */
          ),
          targetLink.value ? (openBlock(), createElementBlock(
            "p",
            {
              key: 0,
              class: normalizeClass([unref(ns).e("link"), "sle"])
            },
            toDisplayString(targetLink.value),
            3
            /* TEXT, CLASS */
          )) : createCommentVNode("v-if", true),
          targetLink.value ? (openBlock(), createElementBlock("div", _hoisted_2, [
            createElementVNode(
              "button",
              {
                class: "btn",
                onClick: confirmRedirect
              },
              toDisplayString(unref(t)("tk.riskLink.confirmButtonText")),
              1
              /* TEXT */
            )
          ])) : createCommentVNode("v-if", true)
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };

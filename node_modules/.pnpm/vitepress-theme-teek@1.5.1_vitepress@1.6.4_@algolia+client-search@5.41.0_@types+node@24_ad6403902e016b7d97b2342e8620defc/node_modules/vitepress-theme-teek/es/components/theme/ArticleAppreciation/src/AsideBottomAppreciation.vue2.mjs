import { defineComponent, computed, createElementBlock, openBlock, unref, normalizeClass, createElementVNode } from 'vue';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import 'vitepress-theme-teek/theme-chalk/tk-copy-banner.css';
import { useLocale } from '../../../../composables/useLocale.mjs';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["innerHTML"];
const _hoisted_3 = ["innerHTML"];
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "AsideBottomAppreciation" },
  __name: "AsideBottomAppreciation",
  setup(__props) {
    const ns = useNamespace("article-appreciation");
    const { t } = useLocale();
    const { getTeekConfigRef } = useTeekConfig();
    const appreciateConfig = getTeekConfigRef("appreciation", { position: "" });
    const asideBottomOptions = computed(() => appreciateConfig.value.options || {});
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass([unref(ns).b(), unref(ns).m("aside-bottom")]),
        "aria-label": unref(t)("tk.articleAppreciation.label")
      }, [
        createElementVNode("span", {
          innerHTML: asideBottomOptions.value.title
        }, null, 8, _hoisted_2),
        createElementVNode("div", {
          class: normalizeClass(unref(ns).e("content")),
          innerHTML: asideBottomOptions.value.content
        }, null, 10, _hoisted_3)
      ], 10, _hoisted_1);
    };
  }
});

export { _sfc_main as default };

const getNowDate = (format = "yyyy-MM-dd hh:mm:ss", utc = true) => {
  return formatDate(/* @__PURE__ */ new Date(), format, utc);
};
const formatDate = (date, format = "yyyy-MM-dd hh:mm:ss", utc = true) => {
  if (!date) return "";
  const dateObj = new Date(date);
  const year = utc ? dateObj.getUTCFullYear() : dateObj.getFullYear();
  const month = String((utc ? dateObj.getUTCMonth() : dateObj.getMonth()) + 1).padStart(2, "0");
  const day = String(utc ? dateObj.getUTCDate() : dateObj.getDate()).padStart(2, "0");
  const hours = String(utc ? dateObj.getUTCHours() : dateObj.getHours()).padStart(2, "0");
  const minutes = String(utc ? dateObj.getUTCMinutes() : dateObj.getMinutes()).padStart(2, "0");
  const seconds = String(utc ? dateObj.getUTCSeconds() : dateObj.getSeconds()).padStart(2, "0");
  return format.replace("yyyy", year.toString()).replace("MM", month).replace("dd", day).replace("hh", hours).replace("mm", minutes).replace("ss", seconds);
};
const formatDiffDate = (startDate, endDate) => {
  const start = +new Date(startDate);
  const end = endDate ? +new Date(endDate) : +/* @__PURE__ */ new Date();
  const diff = Math.abs(end - start);
  const oneSeconds = 1e3;
  const oneMinute = oneSeconds * 60;
  const oneHour = oneMinute * 60;
  const oneDay = oneHour * 24;
  const oneWeek = oneDay * 7;
  const oneMonth = oneDay * 30;
  const oneYear = oneMonth * 12;
  if (diff < 1) return "\u521A\u521A";
  if (diff < oneMinute) return `${Math.floor(diff / oneSeconds)} \u79D2\u524D`;
  if (diff < oneHour) return `${Math.floor(diff / oneMinute)} \u5206\u524D`;
  if (diff < oneDay) return `${Math.floor(diff / oneHour)} \u65F6\u524D`;
  if (diff < oneWeek) return `${Math.floor(diff / oneDay)} \u5929\u524D`;
  if (diff < oneMonth) return `${Math.floor(diff / oneWeek)} \u5468\u524D`;
  if (diff < oneYear) return `${Math.floor(diff / oneMonth)} \u6708\u524D`;
  return `${Math.floor(diff / oneYear)} \u5E74\u524D`;
};
const formatDiffDateToDay = (startDate, endDate) => {
  const start = +new Date(startDate);
  const end = endDate ? +new Date(endDate) : +/* @__PURE__ */ new Date();
  return Math.floor(Math.abs(start - end) / (1e3 * 60 * 60 * 24));
};

export { formatDate, formatDiffDate, formatDiffDateToDay, getNowDate };
